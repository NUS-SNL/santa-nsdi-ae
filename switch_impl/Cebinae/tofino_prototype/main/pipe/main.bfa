version:
  version: 1.0.1
  run_id: "101cc9c3a6c14f75"
  target: Tofino
phv ingress:
  ig_intr_md.ingress_mac_tstamp.0-7: {  stage 0: TB4 } 
  ig_intr_md.ingress_mac_tstamp.8-31: {  stage 0: W14(0..23) } 
  ig_intr_md.ingress_mac_tstamp.32-47: {  stage 0: H7 } 
  md.ingress_port: {  stage 0: W5(16..31) } 
  hdr.pktgen.packet_id: {  stage 0: H8 } 
  hdr.ip.version: TH6(12..15)
  hdr.ip.ihl: TH6(8..11)
  hdr.ip.tos: TH6(0..7)
  hdr.ip.total_len: H3
  hdr.ip.identification: TW5(16..31)
  hdr.ip.flags: TW5(13..15)
  hdr.ip.frag_offset: TW5(0..12)
  hdr.ip.ttl: TW4(24..31)
  hdr.ip.protocol: TW4(16..23)
  hdr.ip.hdr_checksum: TW4(0..15)
  hdr.ip.src_addr: W10
  hdr.ip.dst_addr: W9
  hdr.ethernet.dst_addr.0-31: W11
  hdr.ethernet.dst_addr.32-47: H5
  hdr.ethernet.src_addr.0-31: TW6
  hdr.ethernet.src_addr.32-47: TH7
  hdr.ethernet.ether_type: H4
  t_igr_f: {  stage 1..9: H1 } 
  t_igr_ts.0-7: {  stage 1: B1 } 
  t_igr_ts.8-15: {  stage 1: B2 } 
  t_igr_ts.16-23: {  stage 1: B3 } 
  t_igr_ts.24-31: {  stage 1: W8(8..15) } 
  t_igr_aggregate_size: {  stage 2..8: W5 } 
  t_igr_pkt_len.0-15: {  stage 2..8: H6 } 
  t_igr_pkt_len.16-31: {  stage 2..8: W8(16..31) } 
  ig_intr_md_for_dprsr.drop_ctl: {  stage 2..12: W8(5..7) } 
  ig_intr_md_for_dprsr.mirror_type: {  stage 12: B0(0..2) } 
  t_igr_useCebinae: {  stage 1..8: W14(24..31) } 
  ig_intr_md_for_tm.ucast_egress_port: {  stage 1..12: H0(0..8) } 
  ig_intr_md_for_tm.qid: {  stage 12: W8(0..4) } 
  t_igr_saturated: {  stage 2..8: B4(2) } 
  t_igr_relative_round: {  stage 2..3: W0 } 
  t_igr_headq: {  stage 2..11: W6 } 
  t_igr_tailq: {  stage 2..11: W7 } 
  t_igr_rate_head: {  stage 3: W12 } 
  t_igr_rate_head_x_dT: {  stage 3..9: W1 } 
  t_igr_rate_tail: {  stage 3: W13 } 
  t_igr_rate_tail_x_dT: {  stage 3..10: W2 } 
  t_igr_relative_round_m_dt: {  stage 3: W3 } 
  t_igr_dT_minus_relative_round: {  stage 3: W4 } 
  t_igr_log_rate_head: {  stage 4: B1 } 
  t_igr_log_relative_round: {  stage 4: B2 } 
  t_igr_log_aggregate_size: {  stage 5..7: B3 } 
  t_igr_log_relative_round_m_dt: {  stage 4: B1 } 
  t_igr_log_rate_tail: {  stage 4: B2 } 
  t_igr_log_relative_round_m_dt_x_rate_tail: {  stage 5: B3 } 
  t_igr_relative_round_m_dt_x_rate_tail: {  stage 6: W3 } 
  t_igr_bytes: {  stage 9: W0 } 
  t_igr_past_head: {  stage 10..11: W4 } 
  t_igr_past_tail: {  stage 11: W3 } 
  $tmp2: {  stage 12: H2(0..9) } 
  hdr.ip.$valid: B4(0)
  hdr.ethernet.$valid: B4(1)
  context_json:
    TB4:
    - { name : ig_intr_md.ingress_mac_tstamp, live_start : parser, live_end : 0, mutually_exclusive_with: [  ] }
    B0:
    - { name : ig_intr_md_for_dprsr.mirror_type, live_start : deparser, live_end : deparser, mutually_exclusive_with: [  ] }
    B1:
    - { name : t_igr_ts, live_start : 1, live_end : 1, mutually_exclusive_with: [  ] }
    - { name : t_igr_log_rate_head, live_start : 4, live_end : 4, mutually_exclusive_with: [ t_igr_log_relative_round_m_dt ] }
    - { name : t_igr_log_relative_round_m_dt, live_start : 4, live_end : 4, mutually_exclusive_with: [ t_igr_log_rate_head ] }
    B2:
    - { name : t_igr_ts, live_start : 1, live_end : 1, mutually_exclusive_with: [  ] }
    - { name : t_igr_log_relative_round, live_start : 4, live_end : 4, mutually_exclusive_with: [ t_igr_log_rate_tail ] }
    - { name : t_igr_log_rate_tail, live_start : 4, live_end : 4, mutually_exclusive_with: [ t_igr_log_relative_round ] }
    B3:
    - { name : t_igr_ts, live_start : 1, live_end : 1, mutually_exclusive_with: [  ] }
    - { name : t_igr_log_aggregate_size, live_start : 5, live_end : 7, mutually_exclusive_with: [ t_igr_log_relative_round_m_dt_x_rate_tail ] }
    - { name : t_igr_log_relative_round_m_dt_x_rate_tail, live_start : 5, live_end : 5, mutually_exclusive_with: [ t_igr_log_aggregate_size ] }
    B4:
    - { name : t_igr_saturated, live_start : 2, live_end : 8, mutually_exclusive_with: [  ] }
    - { name : hdr.ip.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    - { name : hdr.ethernet.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    H0:
    - { name : ig_intr_md_for_tm.ucast_egress_port, live_start : 1, live_end : deparser, mutually_exclusive_with: [  ] }
    H1:
    - { name : t_igr_f, live_start : 1, live_end : 9, mutually_exclusive_with: [  ] }
    H2:
    - { name : $tmp2, live_start : deparser, live_end : deparser, mutually_exclusive_with: [  ] }
    H3:
    - { name : hdr.ip.total_len, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    H4:
    - { name : hdr.ethernet.ether_type, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    H5:
    - { name : hdr.ethernet.dst_addr, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    H6:
    - { name : t_igr_pkt_len, live_start : 2, live_end : 8, mutually_exclusive_with: [  ] }
    H7:
    - { name : ig_intr_md.ingress_mac_tstamp, live_start : parser, live_end : 0, mutually_exclusive_with: [  ] }
    H8:
    - { name : hdr.pktgen.packet_id, live_start : parser, live_end : 0, mutually_exclusive_with: [  ] }
    W0:
    - { name : t_igr_relative_round, live_start : 2, live_end : 3, mutually_exclusive_with: [  ] }
    - { name : t_igr_bytes, live_start : 9, live_end : 9, mutually_exclusive_with: [  ] }
    W1:
    - { name : t_igr_rate_head_x_dT, live_start : 3, live_end : 9, mutually_exclusive_with: [  ] }
    W2:
    - { name : t_igr_rate_tail_x_dT, live_start : 3, live_end : 10, mutually_exclusive_with: [  ] }
    W3:
    - { name : t_igr_relative_round_m_dt, live_start : 3, live_end : 3, mutually_exclusive_with: [  ] }
    - { name : t_igr_relative_round_m_dt_x_rate_tail, live_start : 6, live_end : 6, mutually_exclusive_with: [  ] }
    - { name : t_igr_past_tail, live_start : 11, live_end : 11, mutually_exclusive_with: [  ] }
    W4:
    - { name : t_igr_dT_minus_relative_round, live_start : 3, live_end : 3, mutually_exclusive_with: [  ] }
    - { name : t_igr_past_head, live_start : 10, live_end : 11, mutually_exclusive_with: [  ] }
    W5:
    - { name : md.ingress_port, live_start : parser, live_end : 0, mutually_exclusive_with: [  ] }
    - { name : t_igr_aggregate_size, live_start : 2, live_end : 8, mutually_exclusive_with: [  ] }
    W6:
    - { name : t_igr_headq, live_start : 2, live_end : 11, mutually_exclusive_with: [  ] }
    W7:
    - { name : t_igr_tailq, live_start : 2, live_end : 11, mutually_exclusive_with: [  ] }
    W8:
    - { name : t_igr_ts, live_start : 1, live_end : 1, mutually_exclusive_with: [  ] }
    - { name : t_igr_pkt_len, live_start : 2, live_end : 8, mutually_exclusive_with: [  ] }
    - { name : ig_intr_md_for_dprsr.drop_ctl, live_start : 2, live_end : deparser, mutually_exclusive_with: [  ] }
    - { name : ig_intr_md_for_tm.qid, live_start : deparser, live_end : deparser, mutually_exclusive_with: [  ] }
    W9:
    - { name : hdr.ip.dst_addr, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    W10:
    - { name : hdr.ip.src_addr, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    W11:
    - { name : hdr.ethernet.dst_addr, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    W12:
    - { name : t_igr_rate_head, live_start : 3, live_end : 3, mutually_exclusive_with: [  ] }
    W13:
    - { name : t_igr_rate_tail, live_start : 3, live_end : 3, mutually_exclusive_with: [  ] }
    W14:
    - { name : ig_intr_md.ingress_mac_tstamp, live_start : parser, live_end : 0, mutually_exclusive_with: [  ] }
    - { name : t_igr_useCebinae, live_start : 1, live_end : 8, mutually_exclusive_with: [  ] }
phv egress:
  eg_intr_md.egress_port: H16(0..8)
  hdr.min_parse_depth_padding_0$0.packet_payload.0-31: TW2
  hdr.min_parse_depth_padding_0$0.packet_payload.32-63: TW3
  hdr.min_parse_depth_padding_0$0.packet_payload.64-79: TH5
  hdr.min_parse_depth_padding_0$0.packet_payload.80-87: TB0
  hdr.min_parse_depth_padding_0$1.packet_payload.0-15: TH1
  hdr.min_parse_depth_padding_0$1.packet_payload.16-31: TH2
  hdr.min_parse_depth_padding_0$1.packet_payload.32-47: TH3
  hdr.min_parse_depth_padding_0$1.packet_payload.48-63: TH4
  hdr.min_parse_depth_padding_0$1.packet_payload.64-79: TH12
  hdr.min_parse_depth_padding_0$1.packet_payload.80-87: TB1
  hdr.min_parse_depth_padding_0$2.packet_payload.0-31: TW8
  hdr.min_parse_depth_padding_0$2.packet_payload.32-63: TW9
  hdr.min_parse_depth_padding_0$2.packet_payload.64-79: TH13
  hdr.min_parse_depth_padding_0$2.packet_payload.80-87: TB2
  hdr.ethernet.dst_addr.0-31: TW11
  hdr.ethernet.dst_addr.32-47: TH16
  hdr.ethernet.src_addr.0-31: TW10
  hdr.ethernet.src_addr.32-47: TH15
  hdr.ethernet.ether_type: TH14
  hdr.ip.version: TH0(12..15)
  hdr.ip.ihl: TH0(8..11)
  hdr.ip.tos: TH0(0..7)
  hdr.ip.total_len: H18
  hdr.ip.identification: TW1(16..31)
  hdr.ip.flags: TW1(13..15)
  hdr.ip.frag_offset: TW1(0..12)
  hdr.ip.ttl: TW0(24..31)
  hdr.ip.protocol: TW0(16..23)
  hdr.ip.hdr_checksum: TW0(0..15)
  hdr.ip.src_addr: W21
  hdr.ip.dst_addr: W16
  port_0.0-8: {  stage 1..2: H17(0..8) } 
  port_0.9-31: {  stage 1..2: W18(0..22) } 
  len_0.0-15: {  stage 1..7: H19 } 
  len_0.16-31: {  stage 1..7: H20 } 
  t_egr_h1: {  stage 3..5: W20(0..9) } 
  t_egr_h2.0-7: {  stage 2..7: B18 } 
  t_egr_h2.8-9: {  stage 2..7: B17(2..3) } 
  t_egr_stored_dst: {  stage 4..7: W17 } 
  t_egr_stored_src: {  stage 4..7: W22 } 
  t_egr_if_precomp1550: {  stage 5..7: W19 } 
  t_egr_if_precomp: {  stage 5..7: W24 } 
  t_egr_stored_dst2: {  stage 6..7: W18 } 
  t_egr_stored_src2: {  stage 6..7: W23 } 
  t_egr_if_precomp1548: {  stage 7: W20 } 
  t_egr_if_precomp1547: {  stage 7: W25 } 
  hdr.ethernet.$valid: B17(0)
  hdr.ip.$valid: B17(1)
  hdr.min_parse_depth_padding_0.$stkvalid: B16(0..2)
  hdr.min_parse_depth_padding_0$0.$valid: B16(2)
  hdr.min_parse_depth_padding_0$1.$valid: B16(1)
  hdr.min_parse_depth_padding_0$2.$valid: B16(0)
  context_json:
    B16:
    - { name : hdr.min_parse_depth_padding_0$2.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    - { name : hdr.min_parse_depth_padding_0.$stkvalid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    - { name : hdr.min_parse_depth_padding_0$0.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    - { name : hdr.min_parse_depth_padding_0$1.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    B17:
    - { name : t_egr_h2, live_start : 2, live_end : 7, mutually_exclusive_with: [  ] }
    - { name : hdr.ethernet.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    - { name : hdr.ip.$valid, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    B18:
    - { name : t_egr_h2, live_start : 2, live_end : 7, mutually_exclusive_with: [  ] }
    H16:
    - { name : eg_intr_md.egress_port, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    H17:
    - { name : port_0, live_start : 1, live_end : 2, mutually_exclusive_with: [  ] }
    H18:
    - { name : hdr.ip.total_len, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    H19:
    - { name : len_0, live_start : 1, live_end : 7, mutually_exclusive_with: [  ] }
    H20:
    - { name : len_0, live_start : 1, live_end : 7, mutually_exclusive_with: [  ] }
    W16:
    - { name : hdr.ip.dst_addr, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    W17:
    - { name : t_egr_stored_dst, live_start : 4, live_end : 7, mutually_exclusive_with: [  ] }
    W18:
    - { name : port_0, live_start : 1, live_end : 2, mutually_exclusive_with: [  ] }
    - { name : t_egr_stored_dst2, live_start : 6, live_end : 7, mutually_exclusive_with: [  ] }
    W19:
    - { name : t_egr_if_precomp1550, live_start : 5, live_end : 7, mutually_exclusive_with: [  ] }
    W20:
    - { name : t_egr_h1, live_start : 3, live_end : 5, mutually_exclusive_with: [  ] }
    - { name : t_egr_if_precomp1548, live_start : 7, live_end : 7, mutually_exclusive_with: [  ] }
    W21:
    - { name : hdr.ip.src_addr, live_start : parser, live_end : deparser, mutually_exclusive_with: [  ] }
    W22:
    - { name : t_egr_stored_src, live_start : 4, live_end : 7, mutually_exclusive_with: [  ] }
    W23:
    - { name : t_egr_stored_src2, live_start : 6, live_end : 7, mutually_exclusive_with: [  ] }
    W24:
    - { name : t_egr_if_precomp, live_start : 5, live_end : 7, mutually_exclusive_with: [  ] }
    W25:
    - { name : t_egr_if_precomp1547, live_start : 7, live_end : 7, mutually_exclusive_with: [  ] }
parser ingress:
  start: $entry_point
  init_zero: [ W5, H1, B1, B2, B3, W8, H6, B0, B4, W0, W6, W7, W12, W1, W13, W2, W3, W4, H2 ]
  bitwise_or: [ B4 ]
  hdr_len_adj: 16
  states:
    $entry_point:
      *:
        load: { half : 0..1 }
        buf_req: 2
        next: start
    start:
      match: [ half ]
      0b*******011000100:
        0..3: W5  # bit[7..15] -> W5 bit[24..16]: ingress::md.ingress_port[8:0].0-8
        2..3: H7  # ingress::ig_intr_md.ingress_mac_tstamp[47:32].32-47
        3..6: W14  # bit[32..55] -> W14 bit[23..0]: ingress::ig_intr_md.ingress_mac_tstamp[31:8].8-31
        7: TB4  # ingress::ig_intr_md.ingress_mac_tstamp[7:0].0-7
        shift: 16
        buf_req: 16
        next: TofinoIngressParser_parse_pktgen
      0b*******001000100:
        0..3: W5  # bit[7..15] -> W5 bit[24..16]: ingress::md.ingress_port[8:0].0-8
        2..3: H7  # ingress::ig_intr_md.ingress_mac_tstamp[47:32].32-47
        3..6: W14  # bit[32..55] -> W14 bit[23..0]: ingress::ig_intr_md.ingress_mac_tstamp[31:8].8-31
        7: TB4  # ingress::ig_intr_md.ingress_mac_tstamp[7:0].0-7
        shift: 16
        buf_req: 16
        next: TofinoIngressParser_parse_pktgen
      0x****:
        0..3: W5  # bit[7..15] -> W5 bit[24..16]: ingress::md.ingress_port[8:0].0-8
        2..3: H7  # ingress::ig_intr_md.ingress_mac_tstamp[47:32].32-47
        3..6: W14  # bit[32..55] -> W14 bit[23..0]: ingress::ig_intr_md.ingress_mac_tstamp[31:8].8-31
        7: TB4  # ingress::ig_intr_md.ingress_mac_tstamp[7:0].0-7
        load: { half : 28..29 }
        shift: 16
        buf_req: 30
        next: start_0
    TofinoIngressParser_parse_pktgen:
      *:
        4..5: H8  # ingress::hdr.pktgen.packet_id
        load: { half : 18..19 }
        shift: 6
        buf_req: 20
        next: start_0
    start_0:
      match: [ half ]
      0x1234:
        0..1: H5  # ingress::hdr.ethernet.dst_addr[47:32].32-47
        2..5: W11  # ingress::hdr.ethernet.dst_addr[31:0].0-31
        6..7: TH7  # ingress::hdr.ethernet.src_addr[47:32].32-47
        8..11: TW6  # ingress::hdr.ethernet.src_addr[31:0].0-31
        12..13: H4  # ingress::hdr.ethernet.ether_type
        B4: 2  # value 1 -> B4 bit[1]: ingress::hdr.ethernet.$valid
        shift: 16
        buf_req: 16
        next: end
      0x0800:
        0..1: H5  # ingress::hdr.ethernet.dst_addr[47:32].32-47
        2..5: W11  # ingress::hdr.ethernet.dst_addr[31:0].0-31
        6..7: TH7  # ingress::hdr.ethernet.src_addr[47:32].32-47
        8..11: TW6  # ingress::hdr.ethernet.src_addr[31:0].0-31
        12..13: H4  # ingress::hdr.ethernet.ether_type
        B4: 2  # value 1 -> B4 bit[1]: ingress::hdr.ethernet.$valid
        shift: 14
        buf_req: 14
        next: EthIpParser_parse_ip
      0x****:
        0..1: H5  # ingress::hdr.ethernet.dst_addr[47:32].32-47
        2..5: W11  # ingress::hdr.ethernet.dst_addr[31:0].0-31
        6..7: TH7  # ingress::hdr.ethernet.src_addr[47:32].32-47
        8..11: TW6  # ingress::hdr.ethernet.src_addr[31:0].0-31
        12..13: H4  # ingress::hdr.ethernet.ether_type
        B4: 2  # value 1 -> B4 bit[1]: ingress::hdr.ethernet.$valid
        shift: 14
        buf_req: 14
        next: end
    EthIpParser_parse_ip:
      *:
        0..1: TH6
            # - bit[0..3] -> TH6 bit[15..12]: ingress::hdr.ip.version
            # - bit[4..7] -> TH6 bit[11..8]: ingress::hdr.ip.ihl
            # - bit[8..15] -> TH6 bit[7..0]: ingress::hdr.ip.tos
        2..3: H3  # ingress::hdr.ip.total_len
        4..7: TW5
            # - bit[32..47] -> TW5 bit[31..16]: ingress::hdr.ip.identification
            # - bit[48..50] -> TW5 bit[15..13]: ingress::hdr.ip.flags
            # - bit[51..63] -> TW5 bit[12..0]: ingress::hdr.ip.frag_offset
        8..11: TW4
            # - bit[64..71] -> TW4 bit[31..24]: ingress::hdr.ip.ttl
            # - bit[72..79] -> TW4 bit[23..16]: ingress::hdr.ip.protocol
            # - bit[80..95] -> TW4 bit[15..0]: ingress::hdr.ip.hdr_checksum
        12..15: W10  # ingress::hdr.ip.src_addr
        16..19: W9  # ingress::hdr.ip.dst_addr
        B4: 1  # value 1 -> B4 bit[0]: ingress::hdr.ip.$valid
        shift: 20
        buf_req: 20
        next: end
deparser ingress:
  dictionary:
    H5: B4(1)  # ingress::hdr.ethernet.dst_addr.32-47 if ingress::hdr.ethernet.$valid
    W11: B4(1)  # ingress::hdr.ethernet.dst_addr.0-31 if ingress::hdr.ethernet.$valid
    TH7: B4(1)  # ingress::hdr.ethernet.src_addr.32-47 if ingress::hdr.ethernet.$valid
    TW6: B4(1)  # ingress::hdr.ethernet.src_addr.0-31 if ingress::hdr.ethernet.$valid
    H4: B4(1)  # ingress::hdr.ethernet.ether_type if ingress::hdr.ethernet.$valid
    TH6: B4(0)
        # - bit[15..12]: ingress::hdr.ip.version if ingress::hdr.ip.$valid
        # - bit[11..8]: ingress::hdr.ip.ihl if ingress::hdr.ip.$valid
        # - bit[7..0]: ingress::hdr.ip.tos if ingress::hdr.ip.$valid
    H3: B4(0)  # ingress::hdr.ip.total_len if ingress::hdr.ip.$valid
    TW5: B4(0)
        # - bit[31..16]: ingress::hdr.ip.identification if ingress::hdr.ip.$valid
        # - bit[15..13]: ingress::hdr.ip.flags if ingress::hdr.ip.$valid
        # - bit[12..0]: ingress::hdr.ip.frag_offset if ingress::hdr.ip.$valid
    TW4: B4(0)
        # - bit[31..24]: ingress::hdr.ip.ttl if ingress::hdr.ip.$valid
        # - bit[23..16]: ingress::hdr.ip.protocol if ingress::hdr.ip.$valid
        # - bit[15..0]: ingress::hdr.ip.hdr_checksum if ingress::hdr.ip.$valid
    W10: B4(0)  # ingress::hdr.ip.src_addr if ingress::hdr.ip.$valid
    W9: B4(0)  # ingress::hdr.ip.dst_addr if ingress::hdr.ip.$valid
  egress_unicast_port: H0(0..8)  # bit[8..0]: ingress::ig_intr_md_for_tm.ucast_egress_port
  qid: W8(0..4)  # bit[4..0]: ingress::ig_intr_md_for_tm.qid
  drop_ctl: W8(5..7)  # bit[7..5]: ingress::ig_intr_md_for_dprsr.drop_ctl
  mirror:
    select: B0(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.mirror_type
    0:
      - H2(0..9)  # bit[9..0]: ingress::$tmp2
parser egress:
  start: $entry_point
  init_zero: [ H17, W18, H19, H20, W20, B18, B17, W17, W22, W19, W24, W23, W25, B16 ]
  bitwise_or: [ B16, B17 ]
  hdr_len_adj: 27
  meta_opt: 8191
  states:
    $entry_point:
      *:
        counter:
          imm: 24
        0..1: H16  # bit[7..15] -> H16 bit[8..0]: egress::eg_intr_md.egress_port
        27..28: TH16  # egress::hdr.ethernet.dst_addr[47:32].32-47
        B17: 1  # value 1 -> B17 bit[0]: egress::hdr.ethernet.$valid
        intr_md: 9
        shift: 29
        buf_req: 29
        next: start.$oob_stall_0
    start.$oob_stall_0:
      *:
        0..3: TW11  # egress::hdr.ethernet.dst_addr[31:0].0-31
        4..5: TH15  # egress::hdr.ethernet.src_addr[47:32].32-47
        6..9: TW10  # egress::hdr.ethernet.src_addr[31:0].0-31
        10..11: TH14  # egress::hdr.ethernet.ether_type
        load: { half : 10..11 }
        shift: 12
        buf_req: 12
        next: start.$split_0
    start.$split_0:
      match: [ half ]
      0x1234:
        counter: dec 2
        shift: 2
        buf_req: 2
        next: min_parse_depth_accept_initial
      0x0800:
        counter: dec 20
        0..1: TH0
            # - bit[0..3] -> TH0 bit[15..12]: egress::hdr.ip.version
            # - bit[4..7] -> TH0 bit[11..8]: egress::hdr.ip.ihl
            # - bit[8..15] -> TH0 bit[7..0]: egress::hdr.ip.tos
        2..3: H18  # egress::hdr.ip.total_len
        4..7: TW1
            # - bit[32..47] -> TW1 bit[31..16]: egress::hdr.ip.identification
            # - bit[48..50] -> TW1 bit[15..13]: egress::hdr.ip.flags
            # - bit[51..63] -> TW1 bit[12..0]: egress::hdr.ip.frag_offset
        8..11: TW0
            # - bit[64..71] -> TW0 bit[31..24]: egress::hdr.ip.ttl
            # - bit[72..79] -> TW0 bit[23..16]: egress::hdr.ip.protocol
            # - bit[80..95] -> TW0 bit[15..0]: egress::hdr.ip.hdr_checksum
        12..15: W21  # egress::hdr.ip.src_addr
        16..19: W16  # egress::hdr.ip.dst_addr
        B17: 2  # value 1 -> B17 bit[1]: egress::hdr.ip.$valid
        shift: 20
        buf_req: 20
        next: min_parse_depth_accept_initial
      0x****:
        buf_req: 0
        next: min_parse_depth_accept_initial
    min_parse_depth_accept_initial:
      match: [ ctr_neg, ctr_zero ]
      0x0:
        counter: dec 11
        0: TB0  # egress::hdr.min_parse_depth_padding_0[0].packet_payload[87:80].80-87
        1..2: TH5  # egress::hdr.min_parse_depth_padding_0[0].packet_payload[79:64].64-79
        3..6: TW3  # egress::hdr.min_parse_depth_padding_0[0].packet_payload[63:32].32-63
        7..10: TW2  # egress::hdr.min_parse_depth_padding_0[0].packet_payload[31:0].0-31
        B16: 4  # value 4 -> B16 bit[2..0]: egress::hdr.min_parse_depth_padding_0.$stkvalid
        shift: 11
        buf_req: 11
        next: min_parse_depth_accept_loop.$split_0
      0b**:
        buf_req: 0
        next: end
    min_parse_depth_accept_loop.$split_0:
      match: [ ctr_neg, ctr_zero ]
      0x0:
        counter: dec 11
        0: TB1  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[87:80].80-87
        1..2: TH12  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[79:64].64-79
        3..4: TH4  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[63:48].48-63
        5..6: TH3  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[47:32].32-47
        7..8: TH2  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[31:16].16-31
        B16: 2  # value 2 -> B16 bit[2..0]: egress::hdr.min_parse_depth_padding_0.$stkvalid
        shift: 9
        buf_req: 9
        next: min_parse_depth_accept_loop.$it1.$split_0
      0b**:
        buf_req: 0
        next: end
    min_parse_depth_accept_loop.$it1.$split_0:
      match: [ ctr_neg, ctr_zero ]
      0x0:
        counter: dec 11
        0..1: TH1  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[15:0].0-15
        2: TB2  # egress::hdr.min_parse_depth_padding_0[2].packet_payload[87:80].80-87
        3..4: TH13  # egress::hdr.min_parse_depth_padding_0[2].packet_payload[79:64].64-79
        5..8: TW9  # egress::hdr.min_parse_depth_padding_0[2].packet_payload[63:32].32-63
        9..12: TW8  # egress::hdr.min_parse_depth_padding_0[2].packet_payload[31:0].0-31
        B16: 1  # value 1 -> B16 bit[2..0]: egress::hdr.min_parse_depth_padding_0.$stkvalid
        shift: 13
        buf_req: 13
        next: end
      0b**:
        0..1: TH1  # egress::hdr.min_parse_depth_padding_0[1].packet_payload[15:0].0-15
        shift: 2
        buf_req: 2
        next: end
deparser egress:
  dictionary:
    TH16: B17(0)  # egress::hdr.ethernet.dst_addr.32-47 if egress::hdr.ethernet.$valid
    TW11: B17(0)  # egress::hdr.ethernet.dst_addr.0-31 if egress::hdr.ethernet.$valid
    TH15: B17(0)  # egress::hdr.ethernet.src_addr.32-47 if egress::hdr.ethernet.$valid
    TW10: B17(0)  # egress::hdr.ethernet.src_addr.0-31 if egress::hdr.ethernet.$valid
    TH14: B17(0)  # egress::hdr.ethernet.ether_type if egress::hdr.ethernet.$valid
    TH0: B17(1)
        # - bit[15..12]: egress::hdr.ip.version if egress::hdr.ip.$valid
        # - bit[11..8]: egress::hdr.ip.ihl if egress::hdr.ip.$valid
        # - bit[7..0]: egress::hdr.ip.tos if egress::hdr.ip.$valid
    H18: B17(1)  # egress::hdr.ip.total_len if egress::hdr.ip.$valid
    TW1: B17(1)
        # - bit[31..16]: egress::hdr.ip.identification if egress::hdr.ip.$valid
        # - bit[15..13]: egress::hdr.ip.flags if egress::hdr.ip.$valid
        # - bit[12..0]: egress::hdr.ip.frag_offset if egress::hdr.ip.$valid
    TW0: B17(1)
        # - bit[31..24]: egress::hdr.ip.ttl if egress::hdr.ip.$valid
        # - bit[23..16]: egress::hdr.ip.protocol if egress::hdr.ip.$valid
        # - bit[15..0]: egress::hdr.ip.hdr_checksum if egress::hdr.ip.$valid
    W21: B17(1)  # egress::hdr.ip.src_addr if egress::hdr.ip.$valid
    W16: B17(1)  # egress::hdr.ip.dst_addr if egress::hdr.ip.$valid
    TB0: B16(2)  # egress::hdr.min_parse_depth_padding_0[0].packet_payload.80-87 if egress::hdr.min_parse_depth_padding_0[0].$valid
    TH5: B16(2)  # egress::hdr.min_parse_depth_padding_0[0].packet_payload.64-79 if egress::hdr.min_parse_depth_padding_0[0].$valid
    TW3: B16(2)  # egress::hdr.min_parse_depth_padding_0[0].packet_payload.32-63 if egress::hdr.min_parse_depth_padding_0[0].$valid
    TW2: B16(2)  # egress::hdr.min_parse_depth_padding_0[0].packet_payload.0-31 if egress::hdr.min_parse_depth_padding_0[0].$valid
    TB1: B16(1)  # egress::hdr.min_parse_depth_padding_0[1].packet_payload.80-87 if egress::hdr.min_parse_depth_padding_0[1].$valid
    TH12: B16(1)  # egress::hdr.min_parse_depth_padding_0[1].packet_payload.64-79 if egress::hdr.min_parse_depth_padding_0[1].$valid
    TH4: B16(1)  # egress::hdr.min_parse_depth_padding_0[1].packet_payload.48-63 if egress::hdr.min_parse_depth_padding_0[1].$valid
    TH3: B16(1)  # egress::hdr.min_parse_depth_padding_0[1].packet_payload.32-47 if egress::hdr.min_parse_depth_padding_0[1].$valid
    TH2: B16(1)  # egress::hdr.min_parse_depth_padding_0[1].packet_payload.16-31 if egress::hdr.min_parse_depth_padding_0[1].$valid
    TH1: B16(1)  # egress::hdr.min_parse_depth_padding_0[1].packet_payload.0-15 if egress::hdr.min_parse_depth_padding_0[1].$valid
    TB2: B16(0)  # egress::hdr.min_parse_depth_padding_0[2].packet_payload.80-87 if egress::hdr.min_parse_depth_padding_0[2].$valid
    TH13: B16(0)  # egress::hdr.min_parse_depth_padding_0[2].packet_payload.64-79 if egress::hdr.min_parse_depth_padding_0[2].$valid
    TW9: B16(0)  # egress::hdr.min_parse_depth_padding_0[2].packet_payload.32-63 if egress::hdr.min_parse_depth_padding_0[2].$valid
    TW8: B16(0)  # egress::hdr.min_parse_depth_padding_0[2].packet_payload.0-31 if egress::hdr.min_parse_depth_padding_0[2].$valid
  egress_unicast_port: H16(0..8)  # bit[8..0]: egress::eg_intr_md.egress_port
stage 0 ingress:
  phase0_match IngressParser.$PORT_METADATA:
    p4:
      name: IngressParser.$PORT_METADATA
      size: 288
      preferred_match_type: exact
      match_type: exact
    size: 288
    p4_param_order:
      ig_intr_md.ingress_port: { type: exact, size: 9 }
    format: {ig_intr_md: 0..63}
    constant_value: 0
    actions:
      set_port_metadata:
      - handle: 0x20000000
      - p4_param_order: { ig_intr_md: 64 } 
  exact_match t_igr_tiForward 0:
    p4: { name: Ingress.t_igr.tiForward, size: 512 }
    p4_param_order: 
      md.ingress_port: { type: exact, size: 16, full_size: 16 }
      hdr.ethernet.dst_addr: { type: exact, size: 48, full_size: 48 }
    row: 7
    bus: 0
    column: [ 2, 3, 4, 5 ]
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - { group: 0, index: 0..9, select: 40..51 & 0x0, rams: [[7, 2]] }
      - { group: 0, index: 10..19, select: 40..51 & 0x0, rams: [[7, 3]] }
      - { group: 0, index: 20..29, select: 40..51 & 0x0, rams: [[7, 4]] }
      - { group: 0, index: 30..39, select: 40..51 & 0x0, rams: [[7, 5]] }
    input_xbar:
      exact group 0: { 0: hdr.ethernet.dst_addr.0-31(0..15), 16: md.ingress_port, 32: hdr.ethernet.dst_addr.32-47, 48: hdr.ethernet.dst_addr.0-31(16..31) }
      hash 0:
        0..7: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(0..7)
        8..9: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(8..9)
        11..18: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(0..7)
        19: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(8)
        10: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(9)
        22..29: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(0..7)
        20..21: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(8..9)
        33..39: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(0..6)
        30: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(7)
        31..32: random(hdr.ethernet.dst_addr.0-31(0..15), md.ingress_port, hdr.ethernet.dst_addr.32-47(10..15), hdr.ethernet.dst_addr.0-31(16..31)) ^ hdr.ethernet.dst_addr.32-47(8..9)
      hash group 0:
        table: [0]
        seed: 0x8aac779260
    format: { action(0): 0..1, immediate(0): 2..10, version(0): 112..115, match(0): [ 82..87, 32..79 ] }
    match: [ hdr.ethernet.dst_addr.32-47(10..15), md.ingress_port(0..7), md.ingress_port(8..15), hdr.ethernet.dst_addr.0-31(0..7), hdr.ethernet.dst_addr.0-31(8..15), hdr.ethernet.dst_addr.0-31(16..23), hdr.ethernet.dst_addr.0-31(24..31) ]
    match_group_map: [ [ 0 ] ]
    gateway:
      name: cond-5
      input_xbar:
        exact group 0: { 64: hdr.ethernet.ether_type }
      row: 7
      bus: 0
      unit: 0
      match: { 0: hdr.ethernet.ether_type(0..7), 8: hdr.ethernet.ether_type(8..15) }
      0x1234:
        next:  t_igr_tiRotateF
      miss:
        run_table: true
      condition: 
        expression: "(hdr.ethernet.ether_type == 4660)"
        true:  t_igr_tiRotateF
        false:  t_igr_tiForward
    hit: [  tbl_t_igr_aiSetTs ]
    miss:  tbl_t_igr_aiSetTs
    action_bus: { 32..33 : immediate(0..8) }
    instruction: t_igr_tiForward(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiSetEgress(1, 1):
      - p4_param_order: { egr_port: 9 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: false, reason: has_const_default_action }
      - handle: 0x20000012
      - next_table: 0
      - { egr_port: immediate(0..8) }
      - set ig_intr_md_for_tm.ucast_egress_port, egr_port
      Ingress.t_igr.aiNoop(2, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000013
      - next_table: 0
      - {  }
    default_action: Ingress.t_igr.aiNoop
  exact_match t_igr_tiRotateF 5:
    p4: { name: Ingress.t_igr.tiRotateF, size: 512 }
    p4_param_order: 
      hdr.pktgen.packet_id: { type: exact, size: 16, full_size: 16 }
    row: 7
    bus: 1
    column: [ 6, 7, 8, 9 ]
    stash: 
      row: [ 7 ]
      col: [ 6 ]
      unit: [ 1 ]
    ways:
      - { group: 2, index: 0..9, select: 40..51 & 0x0, rams: [[7, 6]] }
      - { group: 2, index: 10..19, select: 40..51 & 0x0, rams: [[7, 7]] }
      - { group: 2, index: 20..29, select: 40..51 & 0x0, rams: [[7, 8]] }
      - { group: 2, index: 30..39, select: 40..51 & 0x0, rams: [[7, 9]] }
    input_xbar:
      exact group 1: { 0: hdr.pktgen.packet_id }
      hash 2:
        0..7: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(0..7)
        8..9: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(8..9)
        11..18: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(0..7)
        19: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(8)
        10: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(9)
        22..29: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(0..7)
        20..21: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(8..9)
        33..39: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(0..6)
        30: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(7)
        31..32: random(hdr.pktgen.packet_id(10..15)) ^ hdr.pktgen.packet_id(8..9)
      hash group 2:
        table: [2]
        seed: 0xae86e89046
    format: { immediate(0): 0..15, version(0): 112..115, match(0): 50..55, immediate(1): 16..31, version(1): 116..119, match(1): 58..63, immediate(2): 32..47, version(2): 120..123, match(2): 66..71 }
    match: [ hdr.pktgen.packet_id(10..15) ]
    match_group_map: [ [ 0, 1, 2 ] ]
    hit: [  t_igr_tiReadLastSize ]
    miss:  t_igr_tiReadLastSize
    action_bus: { 36..37 : immediate(0..15) }
    instruction: t_igr_tiRotateF($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiRotateF(0, 4):
      - p4_param_order: { fval: 16 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000001
      - next_table: 0
      - { fval: immediate(0..15) }
      - set t_igr_f, fval
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000002
      - next_table: 0
      - {  }
    default_only_action: NoAction
  hash_action tbl_t_igr_aiSetTs 1:
    p4: { name: tbl_t_igr_aiSetTs, hidden: true }
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 1, mask: 0xffff, shift: 0 }
      1: { hash: 1, mask: 0xffff, shift: 0 }
    input_xbar:
      exact group 0: { 80: ig_intr_md.ingress_mac_tstamp.8-31(16..23), 88: ig_intr_md.ingress_mac_tstamp.32-47(8..10), 98: ig_intr_md.ingress_mac_tstamp.8-31(2..15), 112: ig_intr_md.ingress_mac_tstamp.32-47(0..7) }
      hash 1:
        0..7: slice(stripe(crc(0x80000000, 0x0, 0x0, 33, { 0: ig_intr_md.ingress_mac_tstamp.8-31(2..15), 14: ig_intr_md.ingress_mac_tstamp.8-31(16..23), 22: ig_intr_md.ingress_mac_tstamp.32-47(0..7), 30: ig_intr_md.ingress_mac_tstamp.32-47(8..10) }, { })), 24..31)
      hash group 1:
        table: [1]
        seed: 0x0
      exact group 0: { 80: ig_intr_md.ingress_mac_tstamp.8-31(16..23), 88: ig_intr_md.ingress_mac_tstamp.32-47(8..10), 98: ig_intr_md.ingress_mac_tstamp.8-31(2..15), 112: ig_intr_md.ingress_mac_tstamp.32-47(0..7) }
      hash 1:
        8..15: slice(stripe(crc(0x80000000, 0x0, 0x0, 33, { 0: ig_intr_md.ingress_mac_tstamp.8-31(2..15), 14: ig_intr_md.ingress_mac_tstamp.8-31(16..23), 22: ig_intr_md.ingress_mac_tstamp.32-47(0..7), 30: ig_intr_md.ingress_mac_tstamp.32-47(8..10) }, { })), 0..7)
      hash group 1:
        table: [1]
        seed: 0x0
      exact group 0: { 80: ig_intr_md.ingress_mac_tstamp.8-31(16..23), 88: ig_intr_md.ingress_mac_tstamp.32-47(8..10), 98: ig_intr_md.ingress_mac_tstamp.8-31(2..15), 112: ig_intr_md.ingress_mac_tstamp.32-47(0..7) }
      hash 1:
        16..31: slice(stripe(crc(0x80000000, 0x0, 0x0, 33, { 0: ig_intr_md.ingress_mac_tstamp.8-31(2..15), 14: ig_intr_md.ingress_mac_tstamp.8-31(16..23), 22: ig_intr_md.ingress_mac_tstamp.32-47(0..7), 30: ig_intr_md.ingress_mac_tstamp.32-47(8..10) }, { })), 8..23)
      hash group 1:
        table: [1]
        seed: 0x0
    gateway:
      name: tbl_t_igr_aiSetTs-gateway
      row: 0
      bus: 0
      unit: 0
      0x0:  t_igr_tiToggleCebinae
      miss:  t_igr_tiToggleCebinae
      condition: 
        expression: "true(always hit)"
        true:  t_igr_tiToggleCebinae
        false:  t_igr_tiToggleCebinae
    next: []
    action_bus: { 1 : hash_dist(0, 8..15, lo), 2 : hash_dist(1, 0..7, hi), 3 : hash_dist(1, 8..15, hi), 96..99 : hash_dist(0, 1) }
    instruction: tbl_t_igr_aiSetTs($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiSetTs(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000011
      - next_table: 0
      - set B1(0..7), hash_dist(0, 8..15)
      - set B2(0..7), hash_dist(1, 0..7)
      - set B3(0..7), hash_dist(1, 8..15)
      - set W8(8..15), hash_dist(0, 0..7)
    default_action: Ingress.t_igr.aiSetTs
  ternary_match t_igr_tiToggleCebinae 4:
    p4: { name: Ingress.t_igr.tiToggleCebinae, size: 512 }
    hit: [  tbl_t_igr_aiGetRelativeRound ]
    miss:  tbl_t_igr_aiGetRelativeRound
    indirect: t_igr_tiToggleCebinae$tind
  ternary_indirect t_igr_tiToggleCebinae$tind:
    row: 0
    bus: 0
    format: { action: 0..0, immediate: 1..8 }
    action_bus: { 100..103 : immediate(0..7) }
    instruction: t_igr_tiToggleCebinae$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiToggleCebinae(0, 3):
      - p4_param_order: { isOn: 8 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000000e
      - next_table: 0
      - { isOn: immediate(0..7) }
      - set t_igr_useCebinae, isOn
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x2000000f
      - next_table: 0
      - {  }
    default_only_action: NoAction
stage 1 ingress:
  dependency: match
  exact_match t_igr_tiReadLastSize 7:
    p4: { name: Ingress.t_igr.tiReadLastSize, size: 512 }
    p4_param_order: 
      t_igr_f: { type: exact, size: 16, full_size: 16, key_name: "f" }
    row: 7
    bus: 0
    column: [ 2, 3, 4, 5 ]
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - { group: 4, index: 0..9, select: 40..51 & 0x0, rams: [[7, 2]] }
      - { group: 4, index: 10..19, select: 40..51 & 0x0, rams: [[7, 3]] }
      - { group: 4, index: 20..29, select: 40..51 & 0x0, rams: [[7, 4]] }
      - { group: 4, index: 30..39, select: 40..51 & 0x0, rams: [[7, 5]] }
    input_xbar:
      exact group 3: { 0: t_igr_f }
      hash 6:
        0..7: random(t_igr_f(10..15)) ^ t_igr_f(0..7)
        8..9: random(t_igr_f(10..15)) ^ t_igr_f(8..9)
        11..18: random(t_igr_f(10..15)) ^ t_igr_f(0..7)
        19: random(t_igr_f(10..15)) ^ t_igr_f(8)
        10: random(t_igr_f(10..15)) ^ t_igr_f(9)
        22..29: random(t_igr_f(10..15)) ^ t_igr_f(0..7)
        20..21: random(t_igr_f(10..15)) ^ t_igr_f(8..9)
        33..39: random(t_igr_f(10..15)) ^ t_igr_f(0..6)
        30: random(t_igr_f(10..15)) ^ t_igr_f(7)
        31..32: random(t_igr_f(10..15)) ^ t_igr_f(8..9)
      hash group 4:
        table: [6]
        seed: 0x7e5d00cc8d
    format: { immediate(0): 0..31, version(0): 112..115, match(0): 34..39 }
    match: [ t_igr_f(10..15) ]
    match_group_map: [ [ 0 ] ]
    hit: [  t_igr_tiDrop_rotate ]
    miss:  t_igr_tiDrop_rotate
    action_bus: { 108..111 : immediate(0..31) }
    instruction: t_igr_tiReadLastSize($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiReadLastSize(0, 8):
      - p4_param_order: { lastRate_x_dT: 32 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000009
      - next_table: 0
      - { lastRate_x_dT: immediate(0..31) }
      - set t_igr_aggregate_size, lastRate_x_dT
    default_action: Ingress.t_igr.aiReadLastSize
    default_action_parameters:
      lastRate_x_dT: "0x0"
  exact_match t_igr_tiDrop_rotate 8:
    p4: { name: Ingress.t_igr.tiDrop_rotate, size: 512 }
    p4_param_order: 
      t_igr_f: { type: ternary, size: 16, full_size: 16, key_name: "f" }
    row: 1
    result_bus: 1
    gateway:
      name: t_igr_tiDrop_rotate-gateway
      input_xbar:
        exact group 3: { 0: t_igr_f }
      row: 1
      bus: 0
      unit: 0
      payload_row: 1
      payload_unit: 1
      payload: 0x1
      format: { action: 0..0 }
      match: {}
      miss:
        next:  t_igr_tiRotateTailq
        action: t_igr_aiDrop_rotate
    hit: [  t_igr_tiRotateTailq ]
    miss:  t_igr_tiRotateTailq
    instruction: t_igr_tiDrop_rotate(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiDrop_rotate(1, 9):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000000c
      - next_table_miss:  t_igr_tiRotateTailq
      - next_table: 0
      - set ig_intr_md_for_dprsr.drop_ctl, 1
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x2000000d
      - next_table_miss:  t_igr_tiRotateTailq
    default_only_action: NoAction
  exact_match t_igr_tiRotateTailq 9:
    p4: { name: Ingress.t_igr.tiRotateTailq, size: 512 }
    p4_param_order: 
      t_igr_f: { type: exact, size: 16, full_size: 16, key_name: "f" }
    row: 1
    result_bus: 0
    gateway:
      name: t_igr_tiRotateTailq-gateway
      input_xbar:
        exact group 3: { 0: t_igr_f }
      row: 0
      bus: 1
      unit: 1
      payload_row: 1
      payload_unit: 0
      payload: 0x1801
      format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
      match: { 0: t_igr_f(0..7), 8: t_igr_f(8..15) }
      0x0080:
        next:  t_igr_tiRotateHeadq
        action: t_igr_aiRotateTailq
      miss:
        run_table: true
    hit: [  t_igr_tiRotateHeadq ]
    miss:  t_igr_tiRotateHeadq
    stateful: t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq(meter_addr, meter_pfe, meter_type)
    instruction: t_igr_tiRotateTailq(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiRotateTailq(1, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000007
      - next_table_miss:  t_igr_tiRotateHeadq
      - next_table: 0
      - t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq(t_igr_riRotateTailq, 0)
      NoAction(-1, 10):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000008
      - next_table_miss:  t_igr_tiRotateHeadq
    default_only_action: NoAction
  stateful t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq:
    p4: { name: Ingress.t_igr.ri_tailq, size: 1 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    format: { lo: 32 }
    actions:
      t_igr_riRotateTailq:
      - equ lo, lo, -2
      - alu_a cmplo, lo, 1
      - alu_a !cmplo, lo, 2
      t_igr_riGetTailq:
      - alu_a hi, lo
      - output alu_hi
  exact_match t_igr_tiRotateHeadq 10:
    p4: { name: Ingress.t_igr.tiRotateHeadq, size: 512 }
    p4_param_order: 
      t_igr_f: { type: exact, size: 16, full_size: 16, key_name: "f" }
    row: 0
    result_bus: 1
    gateway:
      name: t_igr_tiRotateHeadq-gateway
      input_xbar:
        exact group 3: { 0: t_igr_f }
      row: 7
      bus: 0
      unit: 0
      payload_row: 0
      payload_unit: 1
      payload: 0x1801
      format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
      match: { 0: t_igr_f(0..7), 8: t_igr_f(8..15) }
      0x0080:
        next:  t_igr_tiRotateRoundTime
        action: t_igr_aiRotateHeadq
      miss:
        run_table: true
    hit: [  t_igr_tiRotateRoundTime ]
    miss:  t_igr_tiRotateRoundTime
    stateful: t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq(meter_addr, meter_pfe, meter_type)
    instruction: t_igr_tiRotateHeadq(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiRotateHeadq(1, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000005
      - next_table_miss:  t_igr_tiRotateRoundTime
      - next_table: 0
      - t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq(t_igr_riRotateHeadq, 0)
      NoAction(-1, 11):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000006
      - next_table_miss:  t_igr_tiRotateRoundTime
    default_only_action: NoAction
  stateful t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq:
    p4: { name: Ingress.t_igr.ri_headq, size: 1 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    format: { lo: 32 }
    actions:
      t_igr_riRotateHeadq:
      - equ lo, lo, -1
      - alu_a cmplo, lo, 2
      - alu_a !cmplo, lo, 1
      t_igr_riGetHeadq:
      - alu_a hi, lo
      - output alu_hi
  exact_match t_igr_tiRotateRoundTime 11:
    p4: { name: Ingress.t_igr.tiRotateRoundTime, size: 512 }
    p4_param_order: 
      t_igr_f: { type: exact, size: 16, full_size: 16, key_name: "f" }
    row: 2
    result_bus: 0
    gateway:
      name: t_igr_tiRotateRoundTime-gateway
      input_xbar:
        exact group 3: { 0: t_igr_f }
      row: 1
      bus: 1
      unit: 1
      payload_row: 2
      payload_unit: 0
      payload: 0x1801
      format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
      match: { 0: t_igr_f(0..7), 8: t_igr_f(8..15) }
      0x0080:
        next:  tbl_t_igr_aiDebugLastSize
        action: t_igr_aiRotateRoundTime
      miss:
        run_table: true
    hit: [  tbl_t_igr_aiDebugLastSize ]
    miss:  tbl_t_igr_aiDebugLastSize
    stateful: tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time(meter_addr, meter_pfe, meter_type)
    instruction: t_igr_tiRotateRoundTime(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiRotateRoundTime(1, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000003
      - next_table_miss:  tbl_t_igr_aiDebugLastSize
      - next_table: 0
      - tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time(t_igr_siRotateRoundTime, 0)
      NoAction(-1, 12):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000004
      - next_table_miss:  tbl_t_igr_aiDebugLastSize
    default_only_action: NoAction
  ternary_match tbl_t_igr_aiGetRelativeRound 0:
    p4: { name: tbl_t_igr_aiGetRelativeRound, hidden: true }
    hit: [  t_igr_tiCalcF ]
    miss:  t_igr_tiCalcF
    indirect: tbl_t_igr_aiGetRelativeRound$tind
  stateful tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time:
    p4: { name: Ingress.t_igr.ri_base_round_time, size: 1 }
    row: 3
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 3
    input_xbar:
      exact group 0: { 0: t_igr_ts.0-7, 8: t_igr_ts.24-31, 16: t_igr_ts.8-15, 24: t_igr_ts.16-23 }
      hash 0:
        0..7: t_igr_ts.0-7
        24..31: t_igr_ts.24-31
        8..15: t_igr_ts.8-15
        16..23: t_igr_ts.16-23
      hash group 0:
        table: [0]
        seed: 0x0
    hash_bytemask: 15
    format: { lo: 32 }
    actions:
      t_igr_siRotateRoundTime:
      - add lo, lo, 16777216
      t_igr_siGetBaseRoundTime:
      - sub hi, phv_lo, lo
      - output alu_hi
  ternary_indirect tbl_t_igr_aiGetRelativeRound$tind:
    row: 3
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 96..99 : tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time(0..31) }
    stateful: tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_t_igr_aiGetRelativeRound$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiGetRelativeRound(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000018
      - next_table: 0
      - set W0(0..31), tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time
      - tbl_t_igr_aiGetRelativeRound$salu.Ingress.t_igr.ri_base_round_time(t_igr_siGetBaseRoundTime, 0)
    default_action: Ingress.t_igr.aiGetRelativeRound
  exact_match t_igr_tiCalcF 1:
    p4: { name: Ingress.t_igr.tiCalcF, size: 512 }
    p4_param_order: 
      hdr.ip.src_addr: { type: exact, size: 32, full_size: 32 }
      hdr.ip.dst_addr: { type: exact, size: 32, full_size: 32 }
    row: [ 6, 5 ]
    bus: [ 1, 0 ]
    column:
    - [ 3, 4, 5 ]
    - 2
    stash: 
      row: [ 6 ]
      col: [ 3 ]
      unit: [ 1 ]
    ways:
      - { group: 1, index: 0..9, select: 40..51 & 0x0, rams: [[6, 3]] }
      - { group: 1, index: 10..19, select: 40..51 & 0x0, rams: [[6, 4]] }
      - { group: 1, index: 20..29, select: 40..51 & 0x0, rams: [[6, 5]] }
      - { group: 1, index: 30..39, select: 40..51 & 0x0, rams: [[5, 2]] }
    input_xbar:
      exact group 1: { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }
      hash 2:
        0..7: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(0..7)
        8..9: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(8..9)
        11..18: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(0..7)
        19: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(8)
        10: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(9)
        22..29: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(0..7)
        20..21: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(8..9)
        33..39: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(0..6)
        30: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(7)
        31..32: random(hdr.ip.dst_addr(10..31), hdr.ip.src_addr) ^ hdr.ip.dst_addr(8..9)
      hash group 1:
        table: [2]
        seed: 0xc92687df45
    format: { action(0): 0..0, version(0): 112..115, meter_addr(0): 1..10, match(0): [ 82..87, 32..79 ] }
    match: [ hdr.ip.dst_addr(10..15), hdr.ip.dst_addr(16..23), hdr.ip.dst_addr(24..31), hdr.ip.src_addr(0..7), hdr.ip.src_addr(8..15), hdr.ip.src_addr(16..23), hdr.ip.src_addr(24..31) ]
    match_group_map: [ [ 0 ] ]
    hit: [  tbl_t_igr_aiGetTailq ]
    miss:  tbl_t_igr_aiGetTailq
    stateful: t_igr_tiCalcF$salu.Ingress.t_igr.fCount(meter_addr, $DEFAULT, $DEFAULT)
    instruction: t_igr_tiCalcF(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiSetFTop(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: false, reason: has_const_default_action }
      - handle: 0x20000014
      - next_table: 0
      - shl t_igr_f, ig_intr_md_for_tm.ucast_egress_port, 1
      - t_igr_tiCalcF$salu.Ingress.t_igr.fCount(t_igr_raFCount, 0)
      Ingress.t_igr.aiSetFBottom(1, 4):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000015
      - next_table: 0
      - deposit-field H1(9..15), 0, H0
      - t_igr_tiCalcF$salu.Ingress.t_igr.fCount(t_igr_raFCount, 1)
    default_action: Ingress.t_igr.aiSetFBottom
  stateful t_igr_tiCalcF$salu.Ingress.t_igr.fCount:
    p4: { name: Ingress.t_igr.fCount, size: 1024 }
    row: 7
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 7
    format: { lo: 32 }
    actions:
      t_igr_raFCount:
      - add lo, lo, 1
  ternary_match tbl_t_igr_aiGetTailq 2:
    p4: { name: tbl_t_igr_aiGetTailq, hidden: true }
    hit: [  tbl_t_igr_aiGetHeadq ]
    miss:  tbl_t_igr_aiGetHeadq
    indirect: tbl_t_igr_aiGetTailq$tind
  ternary_indirect tbl_t_igr_aiGetTailq$tind:
    row: 3
    bus: 0
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 104..107 : t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq(0..31) }
    stateful: t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_t_igr_aiGetTailq$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiGetTailq(0, 3):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000001a
      - next_table: 0
      - set W7(0..31), t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq
      - t_igr_tiRotateTailq$salu.Ingress.t_igr.ri_tailq(t_igr_riGetTailq, 0)
    default_action: Ingress.t_igr.aiGetTailq
  ternary_match tbl_t_igr_aiGetHeadq 3:
    p4: { name: tbl_t_igr_aiGetHeadq, hidden: true }
    hit: [  tbl_t_igr_aiSetPktLen ]
    miss:  tbl_t_igr_aiSetPktLen
    indirect: tbl_t_igr_aiGetHeadq$tind
  ternary_indirect tbl_t_igr_aiGetHeadq$tind:
    row: 2
    bus: 1
    format: { action: 0..0, meter_addr: 1..10 }
    action_bus: { 112..115 : t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq(0..31) }
    stateful: t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq(meter_addr, $DEFAULT, $DEFAULT)
    instruction: tbl_t_igr_aiGetHeadq$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiGetHeadq(0, 5):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000019
      - next_table: 0
      - set W6(0..31), t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq
      - t_igr_tiRotateHeadq$salu.Ingress.t_igr.ri_headq(t_igr_riGetHeadq, 0)
    default_action: Ingress.t_igr.aiGetHeadq
  hash_action tbl_t_igr_aiSetPktLen 5:
    p4: { name: tbl_t_igr_aiSetPktLen, hidden: true }
    row: 2
    result_bus: 1
    hash_dist:
      1: { hash: 2, mask: 0xffff, shift: 0 }
      2: { hash: 2, mask: 0xffff, shift: 0 }
    input_xbar:
      exact group 0: { 64: hdr.ip.total_len }
      hash 1:
        16..31: slice(stripe(crc(0x80000000, 0x0, 0x0, 16, { 0: hdr.ip.total_len }, { })), 16..31)
      hash group 2:
        table: [1]
        seed: 0x0
      exact group 0: { 64: hdr.ip.total_len }
      hash 1:
        32..47: slice(stripe(crc(0x80000000, 0x0, 0x0, 16, { 0: hdr.ip.total_len }, { })), 0..15)
      hash group 2:
        table: [1]
        seed: 0x0
    gateway:
      name: tbl_t_igr_aiSetPktLen-gateway
      row: 2
      bus: 0
      unit: 0
      0x0:  t_igr_tiCalcSaturated
      miss:  t_igr_tiCalcSaturated
      condition: 
        expression: "true(always hit)"
        true:  t_igr_tiCalcSaturated
        false:  t_igr_tiCalcSaturated
    next: []
    action_bus: { 34..35 : hash_dist(2, hi), 100..103 : hash_dist(1, 2) }
    instruction: tbl_t_igr_aiSetPktLen($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiSetPktLen(0, 6):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000010
      - next_table: 0
      - set H6(0..15), hash_dist(2, 0..15)
      - set W8(16..31), hash_dist(1, 0..15)
    default_action: Ingress.t_igr.aiSetPktLen
  exact_match t_igr_tiCalcSaturated 6:
    p4: { name: Ingress.t_igr.tiCalcSaturated, size: 512 }
    p4_param_order: 
      ig_intr_md_for_tm.ucast_egress_port: { type: exact, size: 9, full_size: 9, key_name: "ig_tm_md.ucast_egress_port" }
    row: 6
    bus: 0
    column: 2
    stash: 
      row: [ 6 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - { group: 3, index: 0..9, select: 40..51 & 0x0, rams: [[6, 2]] }
    input_xbar:
      exact group 2: { 64: ig_intr_md_for_tm.ucast_egress_port }
      hash 5:
        0..7: ig_intr_md_for_tm.ucast_egress_port(0..7)
        8: ig_intr_md_for_tm.ucast_egress_port(8)
      hash group 3:
        table: [5]
        seed: 0x0
    format: { action(0): 0..0, version(0): 112..115, action(1): 1..1, version(1): 116..119, action(2): 2..2, version(2): 120..123, action(3): 3..3, version(3): 124..127, action(4): 4..4, version(4): 8..11 }
    match_group_map: [ [ 0, 1, 2, 3, 4 ] ]
    hit: [  tbl_t_igr_aiCalc_relative_round_m_dt ]
    miss:  tbl_t_igr_aiCalc_relative_round_m_dt
    instruction: t_igr_tiCalcSaturated(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiSaturated(0, 7):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: false, reason: has_const_default_action }
      - handle: 0x20000016
      - next_table: 0
      - set t_igr_saturated, 1
      Ingress.t_igr.aiNotSaturated(1, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000017
      - next_table: 0
    default_action: Ingress.t_igr.aiNotSaturated
stage 2 ingress:
  dependency: match
  hash_action tbl_t_igr_aiDebugLastSize 5:
    p4: { name: tbl_t_igr_aiDebugLastSize, hidden: true }
    row: 0
    result_bus: 1
    hash_dist:
      3: { hash: 3, mask: 0xffff, shift: 5 }
    input_xbar:
      exact group 1: { 96: t_igr_f }
      hash 3:
        0..15: t_igr_f
      hash group 3:
        table: [3]
        seed: 0x0
    gateway:
      name: tbl_t_igr_aiDebugLastSize-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  tbl_t_igr_ai_rotate_bytes
      miss:  tbl_t_igr_ai_rotate_bytes
      condition: 
        expression: "true(always hit)"
        true:  tbl_t_igr_ai_rotate_bytes
        false:  tbl_t_igr_ai_rotate_bytes
    next: []
    stateful: tbl_t_igr_aiDebugLastSize$salu.Ingress.t_igr.riRotateLastSize(hash_dist 3, $DEFAULT, $DEFAULT)
    instruction: tbl_t_igr_aiDebugLastSize($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiDebugLastSize(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000b
      - next_table: 0
      - tbl_t_igr_aiDebugLastSize$salu.Ingress.t_igr.riRotateLastSize(t_igr_siDebugLastSize, $hash_dist)
    default_action: Ingress.t_igr.aiDebugLastSize
  stateful tbl_t_igr_aiDebugLastSize$salu.Ingress.t_igr.riRotateLastSize:
    p4: { name: Ingress.t_igr.riRotateLastSize, size: 1024 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 2: { 64: t_igr_aggregate_size }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_igr_siDebugLastSize:
      - alu_a lo, phv_lo
  ternary_match tbl_t_igr_aiCalc_relative_round_m_dt 0:
    p4: { name: tbl_t_igr_aiCalc_relative_round_m_dt, hidden: true }
    hit: [  t_igr_tiGetRates_tail ]
    miss:  t_igr_tiGetRates_tail
    indirect: tbl_t_igr_aiCalc_relative_round_m_dt$tind
  ternary_indirect tbl_t_igr_aiCalc_relative_round_m_dt$tind:
    row: 0
    bus: 1
    format: { action: 0..0, immediate: 1..32 }
    action_bus: { 96..99 : immediate(0..31) }
    instruction: tbl_t_igr_aiCalc_relative_round_m_dt$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_relative_round_m_dt(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000001d
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 4278190080 }
      - add W3, $constant0, W0
    default_action: Ingress.t_igr.aiCalc_relative_round_m_dt
  exact_match t_igr_tiGetRates_tail 1:
    p4: { name: Ingress.t_igr.tiGetRates_tail, size: 512 }
    p4_param_order: 
      t_igr_f: { type: exact, size: 16, full_size: 16, key_name: "f" }
      t_igr_tailq: { type: exact, size: 32, full_size: 32, key_name: "tailq" }
    row: [ 7, 6 ]
    bus: [ 1, 0 ]
    column:
    - [ 6, 7 ]
    - [ 2, 3 ]
    stash: 
      row: [ 7 ]
      col: [ 6 ]
      unit: [ 1 ]
    ways:
      - { group: 0, index: 0..9, select: 40..51 & 0x0, rams: [[7, 6]] }
      - { group: 0, index: 10..19, select: 40..51 & 0x0, rams: [[7, 7]] }
      - { group: 0, index: 20..29, select: 40..51 & 0x0, rams: [[6, 2]] }
      - { group: 0, index: 30..39, select: 40..51 & 0x0, rams: [[6, 3]] }
    input_xbar:
      exact group 0: { 0: t_igr_tailq, 32: t_igr_f }
      hash 0:
        0..7: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(0..7)
        8..9: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(8..9)
        11..18: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(0..7)
        19: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(8)
        10: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(9)
        22..29: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(0..7)
        20..21: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(8..9)
        33..39: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(0..6)
        30: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(7)
        31..32: random(t_igr_tailq, t_igr_f(10..15)) ^ t_igr_f(8..9)
      hash group 0:
        table: [0]
        seed: 0xdc485b20bf
    format: { immediate(0): 0..31, version(0): 112..115, match(0): [ 66..71, 32..63 ] }
    match: [ t_igr_f(10..15), t_igr_tailq(0..7), t_igr_tailq(8..15), t_igr_tailq(16..23), t_igr_tailq(24..31) ]
    match_group_map: [ [ 0 ] ]
    hit: [  tbl_t_igr_aiPrecompute_relative_round_test ]
    miss:  tbl_t_igr_aiPrecompute_relative_round_test
    action_bus: { 100..103 : immediate(0..31) }
    action: t_igr_tiGetRates_tail$action_data($DIRECT, $DEFAULT)
    instruction: t_igr_tiGetRates_tail($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiGetRates_tail(0, 2):
      - p4_param_order: { r_tail: 32, r_tail_x_dT: 32 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000001c
      - next_table: 0
      - { r_tail: $adf_f0(0..31), r_tail_x_dT: immediate(0..31) }
      - set t_igr_rate_tail, r_tail
      - set t_igr_rate_tail_x_dT, r_tail_x_dT
    default_action: Ingress.t_igr.aiGetRates_tail
    default_action_parameters:
      r_tail: "0x1"
      r_tail_x_dT: "0x1"
  action t_igr_tiGetRates_tail$action_data:
    p4: { name: Ingress.t_igr.tiGetRates_tail$action }
    row: 13
    logical_bus: A
    column: 0
    vpns: [ 0 ]
    home_row:
    - 13
    format Ingress.t_igr.aiGetRates_tail: { $adf_f0: 0..31 }
    action_bus: { 104..107 : $adf_f0 }
  ternary_match tbl_t_igr_aiPrecompute_relative_round_test 2:
    p4: { name: tbl_t_igr_aiPrecompute_relative_round_test, hidden: true }
    hit: [  t_igr_tiGetRates_head ]
    miss:  t_igr_tiGetRates_head
    indirect: tbl_t_igr_aiPrecompute_relative_round_test$tind
  ternary_indirect tbl_t_igr_aiPrecompute_relative_round_test$tind:
    row: 0
    bus: 0
    format: { action: 0..0, immediate: 1..32 }
    action_bus: { 108..111 : immediate(0..31) }
    instruction: tbl_t_igr_aiPrecompute_relative_round_test$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiPrecompute_relative_round_test(0, 3):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000001e
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 16777216 }
      - ssubu W4, $constant0, W0
    default_action: Ingress.t_igr.aiPrecompute_relative_round_test
  exact_match t_igr_tiGetRates_head 3:
    p4: { name: Ingress.t_igr.tiGetRates_head, size: 512 }
    p4_param_order: 
      t_igr_f: { type: exact, size: 16, full_size: 16, key_name: "f" }
      t_igr_headq: { type: exact, size: 32, full_size: 32, key_name: "headq" }
    row: 7
    bus: 0
    column: [ 2, 3, 4, 5 ]
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - { group: 1, index: 0..9, select: 40..51 & 0x0, rams: [[7, 2]] }
      - { group: 1, index: 10..19, select: 40..51 & 0x0, rams: [[7, 3]] }
      - { group: 1, index: 20..29, select: 40..51 & 0x0, rams: [[7, 4]] }
      - { group: 1, index: 30..39, select: 40..51 & 0x0, rams: [[7, 5]] }
    input_xbar:
      exact group 0: { 64: t_igr_headq, 96: t_igr_f }
      hash 1:
        0..7: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(0..7)
        8..9: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(8..9)
        11..18: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(0..7)
        19: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(8)
        10: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(9)
        22..29: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(0..7)
        20..21: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(8..9)
        33..39: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(0..6)
        30: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(7)
        31..32: random(t_igr_headq, t_igr_f(10..15)) ^ t_igr_f(8..9)
      hash group 1:
        table: [1]
        seed: 0x56da49aa76
    format: { immediate(0): 0..31, version(0): 112..115, match(0): [ 66..71, 32..63 ] }
    match: [ t_igr_f(10..15), t_igr_headq(0..7), t_igr_headq(8..15), t_igr_headq(16..23), t_igr_headq(24..31) ]
    match_group_map: [ [ 0 ] ]
    hit: [  t_igr_tiCalc_log_rate_tail ]
    miss:  t_igr_tiCalc_log_rate_tail
    action_bus: { 112..115 : immediate(0..31) }
    action: t_igr_tiGetRates_head$action_data($DIRECT, $DEFAULT)
    instruction: t_igr_tiGetRates_head($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiGetRates_head(0, 4):
      - p4_param_order: { r_head: 32, r_head_x_dT: 32 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000001b
      - next_table: 0
      - { r_head: $adf_f0(0..31), r_head_x_dT: immediate(0..31) }
      - set t_igr_rate_head, r_head
      - set t_igr_rate_head_x_dT, r_head_x_dT
    default_action: Ingress.t_igr.aiGetRates_head
    default_action_parameters:
      r_head: "0x1"
      r_head_x_dT: "0x1"
  action t_igr_tiGetRates_head$action_data:
    p4: { name: Ingress.t_igr.tiGetRates_head$action }
    row: 15
    logical_bus: A
    column: 4
    vpns: [ 0 ]
    home_row:
    - 15
    format Ingress.t_igr.aiGetRates_head: { $adf_f0: 0..31 }
    action_bus: { 120..123 : $adf_f0 }
stage 3 ingress:
  dependency: match
  ternary_match t_igr_tiCalc_log_rate_tail 0:
    p4: { name: Ingress.t_igr.tiCalc_log_rate_tail, size: 512 }
    p4_param_order: 
      t_igr_rate_tail: { type: ternary, size: 32, full_size: 32, key_name: "rate_tail" }
    row: 3
    bus: 0
    column: 0
    input_xbar:
      ternary group 0: { 0: t_igr_rate_tail }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x55 }
    gateway:
      name: cond-6
      input_xbar:
        exact group 0: { 0: t_igr_dT_minus_relative_round }
      row: 0
      bus: 0
      unit: 0
      match: { 0: t_igr_dT_minus_relative_round(0..7), 8: t_igr_dT_minus_relative_round(8..15), 16: t_igr_dT_minus_relative_round(16..23), 24: t_igr_dT_minus_relative_round(24..31) }
      0x00000000:
        next:  t_igr_tiCalc_log_relative_round
      miss:
        run_table: true
      condition: 
        expression: "(t_igr_dT_minus_relative_round == 0)"
        true:  t_igr_tiCalc_log_relative_round
        false:  t_igr_tiCalc_log_rate_tail
    hit: [  t_igr_tiCalc_log_relative_round_m_dt ]
    miss:  t_igr_tiCalc_log_relative_round_m_dt
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x1"
          mask: "0x1"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"
      - priority: 1
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x2"
          mask: "0x2"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1"
      - priority: 2
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x4"
          mask: "0x4"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x2"
      - priority: 3
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x8"
          mask: "0x8"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x3"
      - priority: 4
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x10"
          mask: "0x10"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x4"
      - priority: 5
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x20"
          mask: "0x20"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x5"
      - priority: 6
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x40"
          mask: "0x40"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x6"
      - priority: 7
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x80"
          mask: "0x80"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x7"
      - priority: 8
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x100"
          mask: "0x100"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x8"
      - priority: 9
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x200"
          mask: "0x200"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x9"
      - priority: 10
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x400"
          mask: "0x400"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xA"
      - priority: 11
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x800"
          mask: "0x800"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xB"
      - priority: 12
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x1000"
          mask: "0x1000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xC"
      - priority: 13
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x2000"
          mask: "0x2000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xD"
      - priority: 14
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x4000"
          mask: "0x4000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xE"
      - priority: 15
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x8000"
          mask: "0x8000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xF"
      - priority: 16
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x10000"
          mask: "0x10000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x10"
      - priority: 17
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x20000"
          mask: "0x20000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x11"
      - priority: 18
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x40000"
          mask: "0x40000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x12"
      - priority: 19
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x80000"
          mask: "0x80000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x13"
      - priority: 20
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x100000"
          mask: "0x100000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x14"
      - priority: 21
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x200000"
          mask: "0x200000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x15"
      - priority: 22
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x400000"
          mask: "0x400000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x16"
      - priority: 23
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x800000"
          mask: "0x800000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x17"
      - priority: 24
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x1000000"
          mask: "0x1000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x18"
      - priority: 25
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x2000000"
          mask: "0x2000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x19"
      - priority: 26
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x4000000"
          mask: "0x4000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1A"
      - priority: 27
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x8000000"
          mask: "0x8000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1B"
      - priority: 28
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x10000000"
          mask: "0x10000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1C"
      - priority: 29
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x20000000"
          mask: "0x20000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1D"
      - priority: 30
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x40000000"
          mask: "0x40000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1E"
      - priority: 31
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x80000000"
          mask: "0x80000000"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1F"
      - priority: 32
        match_key_fields_values:
        - field_name: rate_tail
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000047
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"

    indirect: t_igr_tiCalc_log_rate_tail$tind
  ternary_indirect t_igr_tiCalc_log_rate_tail$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: t_igr_rate_tail }
    format: { action: 0..0 }
    action: t_igr_tiCalc_log_rate_tail$action_data($DIRECT, $DEFAULT)
    instruction: t_igr_tiCalc_log_rate_tail$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_log_rate_tail(1, 1):
      - p4_param_order: { log_v: 8 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000047
      - next_table: 0
      - { log_v_6: $adf_b0(0..7), log_v: log_v_6 }
      - set t_igr_log_rate_tail, log_v
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000048
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action t_igr_tiCalc_log_rate_tail$action_data:
    p4: { name: Ingress.t_igr.tiCalc_log_rate_tail$action }
    row: 10
    logical_bus: A
    column: 2
    vpns: [ 0 ]
    home_row:
    - 10
    format Ingress.t_igr.aiCalc_log_rate_tail: { $adf_b0: 0..7 }
    action_bus: { 0 : $adf_b0 }
  ternary_match t_igr_tiCalc_log_relative_round 2:
    p4: { name: Ingress.t_igr.tiCalc_log_relative_round, size: 512 }
    p4_param_order: 
      t_igr_relative_round: { type: ternary, size: 32, full_size: 32, key_name: "relative_round" }
    row: 1
    bus: 0
    column: 0
    indirect_bus: 2
    input_xbar:
      ternary group 2: { 0: t_igr_relative_round(24..31), 8: t_igr_relative_round(0..23) }
    match:
    - { group: 2, byte_config: 3, dirtcam: 0x55 }
    hit: [  t_igr_tiCalc_log_rate_head ]
    miss:  t_igr_tiCalc_log_rate_head
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: relative_round
          value: "0x1"
          mask: "0x1"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"
      - priority: 1
        match_key_fields_values:
        - field_name: relative_round
          value: "0x2"
          mask: "0x2"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1"
      - priority: 2
        match_key_fields_values:
        - field_name: relative_round
          value: "0x4"
          mask: "0x4"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x2"
      - priority: 3
        match_key_fields_values:
        - field_name: relative_round
          value: "0x8"
          mask: "0x8"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x3"
      - priority: 4
        match_key_fields_values:
        - field_name: relative_round
          value: "0x10"
          mask: "0x10"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x4"
      - priority: 5
        match_key_fields_values:
        - field_name: relative_round
          value: "0x20"
          mask: "0x20"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x5"
      - priority: 6
        match_key_fields_values:
        - field_name: relative_round
          value: "0x40"
          mask: "0x40"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x6"
      - priority: 7
        match_key_fields_values:
        - field_name: relative_round
          value: "0x80"
          mask: "0x80"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x7"
      - priority: 8
        match_key_fields_values:
        - field_name: relative_round
          value: "0x100"
          mask: "0x100"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x8"
      - priority: 9
        match_key_fields_values:
        - field_name: relative_round
          value: "0x200"
          mask: "0x200"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x9"
      - priority: 10
        match_key_fields_values:
        - field_name: relative_round
          value: "0x400"
          mask: "0x400"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xA"
      - priority: 11
        match_key_fields_values:
        - field_name: relative_round
          value: "0x800"
          mask: "0x800"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xB"
      - priority: 12
        match_key_fields_values:
        - field_name: relative_round
          value: "0x1000"
          mask: "0x1000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xC"
      - priority: 13
        match_key_fields_values:
        - field_name: relative_round
          value: "0x2000"
          mask: "0x2000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xD"
      - priority: 14
        match_key_fields_values:
        - field_name: relative_round
          value: "0x4000"
          mask: "0x4000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xE"
      - priority: 15
        match_key_fields_values:
        - field_name: relative_round
          value: "0x8000"
          mask: "0x8000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xF"
      - priority: 16
        match_key_fields_values:
        - field_name: relative_round
          value: "0x10000"
          mask: "0x10000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x10"
      - priority: 17
        match_key_fields_values:
        - field_name: relative_round
          value: "0x20000"
          mask: "0x20000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x11"
      - priority: 18
        match_key_fields_values:
        - field_name: relative_round
          value: "0x40000"
          mask: "0x40000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x12"
      - priority: 19
        match_key_fields_values:
        - field_name: relative_round
          value: "0x80000"
          mask: "0x80000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x13"
      - priority: 20
        match_key_fields_values:
        - field_name: relative_round
          value: "0x100000"
          mask: "0x100000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x14"
      - priority: 21
        match_key_fields_values:
        - field_name: relative_round
          value: "0x200000"
          mask: "0x200000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x15"
      - priority: 22
        match_key_fields_values:
        - field_name: relative_round
          value: "0x400000"
          mask: "0x400000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x16"
      - priority: 23
        match_key_fields_values:
        - field_name: relative_round
          value: "0x800000"
          mask: "0x800000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x17"
      - priority: 24
        match_key_fields_values:
        - field_name: relative_round
          value: "0x1000000"
          mask: "0x1000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x18"
      - priority: 25
        match_key_fields_values:
        - field_name: relative_round
          value: "0x2000000"
          mask: "0x2000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x19"
      - priority: 26
        match_key_fields_values:
        - field_name: relative_round
          value: "0x4000000"
          mask: "0x4000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1A"
      - priority: 27
        match_key_fields_values:
        - field_name: relative_round
          value: "0x8000000"
          mask: "0x8000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1B"
      - priority: 28
        match_key_fields_values:
        - field_name: relative_round
          value: "0x10000000"
          mask: "0x10000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1C"
      - priority: 29
        match_key_fields_values:
        - field_name: relative_round
          value: "0x20000000"
          mask: "0x20000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1D"
      - priority: 30
        match_key_fields_values:
        - field_name: relative_round
          value: "0x40000000"
          mask: "0x40000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1E"
      - priority: 31
        match_key_fields_values:
        - field_name: relative_round
          value: "0x80000000"
          mask: "0x80000000"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1F"
      - priority: 32
        match_key_fields_values:
        - field_name: relative_round
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000021
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"

    action: t_igr_tiCalc_log_relative_round$action_data($DIRECT, $DEFAULT)
    instruction: t_igr_tiCalc_log_relative_round($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_log_relative_round(0, 3):
      - p4_param_order: { log_v: 8 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000021
      - next_table: 0
      - { log_v_4: $adf_b0(0..7), log_v: log_v_4 }
      - set t_igr_log_relative_round, log_v
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000022
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action t_igr_tiCalc_log_relative_round$action_data:
    p4: { name: Ingress.t_igr.tiCalc_log_relative_round$action }
    row: 13
    logical_bus: A
    column: 0
    vpns: [ 0 ]
    home_row:
    - 13
    format Ingress.t_igr.aiCalc_log_relative_round: { $adf_b0: 0..7 }
    action_bus: { 4 : $adf_b0 }
  ternary_match t_igr_tiCalc_log_rate_head 3:
    p4: { name: Ingress.t_igr.tiCalc_log_rate_head, size: 512 }
    p4_param_order: 
      t_igr_rate_head: { type: ternary, size: 32, full_size: 32, key_name: "rate_head" }
    row: 0
    bus: 0
    column: 0
    indirect_bus: 1
    input_xbar:
      ternary group 3: { 0: t_igr_rate_head(8..31), 24: t_igr_rate_head(0..7) }
    match:
    - { group: 3, byte_config: 3, dirtcam: 0x55 }
    hit: [  tbl_t_igr_aiCalc_log_aggregate_size ]
    miss:  tbl_t_igr_aiCalc_log_aggregate_size
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: rate_head
          value: "0x1"
          mask: "0x1"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"
      - priority: 1
        match_key_fields_values:
        - field_name: rate_head
          value: "0x2"
          mask: "0x2"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1"
      - priority: 2
        match_key_fields_values:
        - field_name: rate_head
          value: "0x4"
          mask: "0x4"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x2"
      - priority: 3
        match_key_fields_values:
        - field_name: rate_head
          value: "0x8"
          mask: "0x8"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x3"
      - priority: 4
        match_key_fields_values:
        - field_name: rate_head
          value: "0x10"
          mask: "0x10"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x4"
      - priority: 5
        match_key_fields_values:
        - field_name: rate_head
          value: "0x20"
          mask: "0x20"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x5"
      - priority: 6
        match_key_fields_values:
        - field_name: rate_head
          value: "0x40"
          mask: "0x40"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x6"
      - priority: 7
        match_key_fields_values:
        - field_name: rate_head
          value: "0x80"
          mask: "0x80"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x7"
      - priority: 8
        match_key_fields_values:
        - field_name: rate_head
          value: "0x100"
          mask: "0x100"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x8"
      - priority: 9
        match_key_fields_values:
        - field_name: rate_head
          value: "0x200"
          mask: "0x200"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x9"
      - priority: 10
        match_key_fields_values:
        - field_name: rate_head
          value: "0x400"
          mask: "0x400"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xA"
      - priority: 11
        match_key_fields_values:
        - field_name: rate_head
          value: "0x800"
          mask: "0x800"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xB"
      - priority: 12
        match_key_fields_values:
        - field_name: rate_head
          value: "0x1000"
          mask: "0x1000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xC"
      - priority: 13
        match_key_fields_values:
        - field_name: rate_head
          value: "0x2000"
          mask: "0x2000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xD"
      - priority: 14
        match_key_fields_values:
        - field_name: rate_head
          value: "0x4000"
          mask: "0x4000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xE"
      - priority: 15
        match_key_fields_values:
        - field_name: rate_head
          value: "0x8000"
          mask: "0x8000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xF"
      - priority: 16
        match_key_fields_values:
        - field_name: rate_head
          value: "0x10000"
          mask: "0x10000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x10"
      - priority: 17
        match_key_fields_values:
        - field_name: rate_head
          value: "0x20000"
          mask: "0x20000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x11"
      - priority: 18
        match_key_fields_values:
        - field_name: rate_head
          value: "0x40000"
          mask: "0x40000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x12"
      - priority: 19
        match_key_fields_values:
        - field_name: rate_head
          value: "0x80000"
          mask: "0x80000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x13"
      - priority: 20
        match_key_fields_values:
        - field_name: rate_head
          value: "0x100000"
          mask: "0x100000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x14"
      - priority: 21
        match_key_fields_values:
        - field_name: rate_head
          value: "0x200000"
          mask: "0x200000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x15"
      - priority: 22
        match_key_fields_values:
        - field_name: rate_head
          value: "0x400000"
          mask: "0x400000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x16"
      - priority: 23
        match_key_fields_values:
        - field_name: rate_head
          value: "0x800000"
          mask: "0x800000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x17"
      - priority: 24
        match_key_fields_values:
        - field_name: rate_head
          value: "0x1000000"
          mask: "0x1000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x18"
      - priority: 25
        match_key_fields_values:
        - field_name: rate_head
          value: "0x2000000"
          mask: "0x2000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x19"
      - priority: 26
        match_key_fields_values:
        - field_name: rate_head
          value: "0x4000000"
          mask: "0x4000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1A"
      - priority: 27
        match_key_fields_values:
        - field_name: rate_head
          value: "0x8000000"
          mask: "0x8000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1B"
      - priority: 28
        match_key_fields_values:
        - field_name: rate_head
          value: "0x10000000"
          mask: "0x10000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1C"
      - priority: 29
        match_key_fields_values:
        - field_name: rate_head
          value: "0x20000000"
          mask: "0x20000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1D"
      - priority: 30
        match_key_fields_values:
        - field_name: rate_head
          value: "0x40000000"
          mask: "0x40000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1E"
      - priority: 31
        match_key_fields_values:
        - field_name: rate_head
          value: "0x80000000"
          mask: "0x80000000"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1F"
      - priority: 32
        match_key_fields_values:
        - field_name: rate_head
          value: "0x0"
          mask: "0x0"
        action_handle: 0x2000001f
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"

    action: t_igr_tiCalc_log_rate_head$action_data($DIRECT, $DEFAULT)
    instruction: t_igr_tiCalc_log_rate_head($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_log_rate_head(0, 4):
      - p4_param_order: { log_v: 8 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000001f
      - next_table: 0
      - { log_v: $adf_b0(0..7) }
      - set t_igr_log_rate_head, log_v
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000020
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action t_igr_tiCalc_log_rate_head$action_data:
    p4: { name: Ingress.t_igr.tiCalc_log_rate_head$action }
    row: 14
    logical_bus: A
    column: 2
    vpns: [ 0 ]
    home_row:
    - 14
    format Ingress.t_igr.aiCalc_log_rate_head: { $adf_b0: 0..7 }
    action_bus: { 6 : $adf_b0 }
  ternary_match t_igr_tiCalc_log_relative_round_m_dt 1:
    p4: { name: Ingress.t_igr.tiCalc_log_relative_round_m_dt, size: 512 }
    p4_param_order: 
      t_igr_relative_round_m_dt: { type: ternary, size: 32, full_size: 32, key_name: "relative_round_m_dt" }
    row: 2
    bus: 0
    column: 0
    indirect_bus: 3
    input_xbar:
      ternary group 1: { 0: t_igr_relative_round_m_dt(16..31), 16: t_igr_relative_round_m_dt(0..15) }
    match:
    - { group: 1, byte_config: 3, dirtcam: 0x55 }
    hit: [  tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail ]
    miss:  tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x1"
          mask: "0x1"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"
      - priority: 1
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x2"
          mask: "0x2"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1"
      - priority: 2
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x4"
          mask: "0x4"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x2"
      - priority: 3
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x8"
          mask: "0x8"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x3"
      - priority: 4
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x10"
          mask: "0x10"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x4"
      - priority: 5
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x20"
          mask: "0x20"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x5"
      - priority: 6
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x40"
          mask: "0x40"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x6"
      - priority: 7
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x80"
          mask: "0x80"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x7"
      - priority: 8
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x100"
          mask: "0x100"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x8"
      - priority: 9
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x200"
          mask: "0x200"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x9"
      - priority: 10
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x400"
          mask: "0x400"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xA"
      - priority: 11
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x800"
          mask: "0x800"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xB"
      - priority: 12
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x1000"
          mask: "0x1000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xC"
      - priority: 13
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x2000"
          mask: "0x2000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xD"
      - priority: 14
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x4000"
          mask: "0x4000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xE"
      - priority: 15
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x8000"
          mask: "0x8000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0xF"
      - priority: 16
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x10000"
          mask: "0x10000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x10"
      - priority: 17
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x20000"
          mask: "0x20000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x11"
      - priority: 18
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x40000"
          mask: "0x40000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x12"
      - priority: 19
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x80000"
          mask: "0x80000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x13"
      - priority: 20
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x100000"
          mask: "0x100000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x14"
      - priority: 21
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x200000"
          mask: "0x200000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x15"
      - priority: 22
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x400000"
          mask: "0x400000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x16"
      - priority: 23
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x800000"
          mask: "0x800000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x17"
      - priority: 24
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x1000000"
          mask: "0x1000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x18"
      - priority: 25
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x2000000"
          mask: "0x2000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x19"
      - priority: 26
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x4000000"
          mask: "0x4000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1A"
      - priority: 27
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x8000000"
          mask: "0x8000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1B"
      - priority: 28
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x10000000"
          mask: "0x10000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1C"
      - priority: 29
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x20000000"
          mask: "0x20000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1D"
      - priority: 30
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x40000000"
          mask: "0x40000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1E"
      - priority: 31
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x80000000"
          mask: "0x80000000"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x1F"
      - priority: 32
        match_key_fields_values:
        - field_name: relative_round_m_dt
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000045
        is_default_entry: false
        action_parameters_values:
        - parameter_name: log_v
          value: "0x0"

    action: t_igr_tiCalc_log_relative_round_m_dt$action_data($DIRECT, $DEFAULT)
    instruction: t_igr_tiCalc_log_relative_round_m_dt($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_log_relative_round_m_dt(0, 2):
      - p4_param_order: { log_v: 8 }
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000045
      - next_table: 0
      - { log_v_5: $adf_b0(0..7), log_v: log_v_5 }
      - set t_igr_log_relative_round_m_dt, log_v
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000046
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action t_igr_tiCalc_log_relative_round_m_dt$action_data:
    p4: { name: Ingress.t_igr.tiCalc_log_relative_round_m_dt$action }
    row: 12
    logical_bus: A
    column: 2
    vpns: [ 0 ]
    home_row:
    - 12
    format Ingress.t_igr.aiCalc_log_relative_round_m_dt: { $adf_b0: 0..7 }
    action_bus: { 2 : $adf_b0 }
stage 4 ingress:
  dependency: action
  ternary_match tbl_t_igr_aiCalc_log_aggregate_size 1:
    p4: { name: tbl_t_igr_aiCalc_log_aggregate_size, hidden: true }
    hit: [  t_igr_tiExp_aggregate_size ]
    miss:  t_igr_tiExp_aggregate_size
    indirect: tbl_t_igr_aiCalc_log_aggregate_size$tind
  ternary_indirect tbl_t_igr_aiCalc_log_aggregate_size$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_t_igr_aiCalc_log_aggregate_size$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_log_aggregate_size(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000023
      - next_table: 0
      - add B3, B1, B2
    default_action: Ingress.t_igr.aiCalc_log_aggregate_size
  ternary_match tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail 0:
    p4: { name: tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail, hidden: true }
    hit: [  t_igr_tiExp_relative_round_m_dt_x_rate_tail ]
    miss:  t_igr_tiExp_relative_round_m_dt_x_rate_tail
    indirect: tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail$tind
  ternary_indirect tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail$tind:
    row: 0
    bus: 1
    format: { action: 0..0 }
    instruction: tbl_t_igr_aiCalc_log_relative_round_m_dt_x_rate_tail$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_log_relative_round_m_dt_x_rate_tail(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000049
      - next_table: 0
      - add B3, B1, B2
    default_action: Ingress.t_igr.aiCalc_log_relative_round_m_dt_x_rate_tail
stage 5 ingress:
  dependency: match
  ternary_match t_igr_tiExp_relative_round_m_dt_x_rate_tail 0:
    p4: { name: Ingress.t_igr.tiExp_relative_round_m_dt_x_rate_tail, size: 512 }
    p4_param_order: 
      t_igr_log_relative_round_m_dt_x_rate_tail: { type: ternary, size: 8, full_size: 8, key_name: "log_relative_round_m_dt_x_rate_tail" }
    row: 9
    bus: 0
    column: 0
    input_xbar:
      ternary group 0: { 0: t_igr_log_relative_round_m_dt_x_rate_tail }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x1 }
    hit: [  tbl_t_igr_aiCalc_aggregate_size_else ]
    miss:  tbl_t_igr_aiCalc_aggregate_size_else
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x0"
          mask: "0xFF"
        action_handle: 0x2000004a
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1"
          mask: "0xFF"
        action_handle: 0x2000004b
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x2"
          mask: "0xFF"
        action_handle: 0x2000004c
        is_default_entry: false
        action_parameters_values: []
      - priority: 3
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x3"
          mask: "0xFF"
        action_handle: 0x2000004d
        is_default_entry: false
        action_parameters_values: []
      - priority: 4
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x4"
          mask: "0xFF"
        action_handle: 0x2000004e
        is_default_entry: false
        action_parameters_values: []
      - priority: 5
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x5"
          mask: "0xFF"
        action_handle: 0x2000004f
        is_default_entry: false
        action_parameters_values: []
      - priority: 6
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x6"
          mask: "0xFF"
        action_handle: 0x20000050
        is_default_entry: false
        action_parameters_values: []
      - priority: 7
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x7"
          mask: "0xFF"
        action_handle: 0x20000051
        is_default_entry: false
        action_parameters_values: []
      - priority: 8
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x8"
          mask: "0xFF"
        action_handle: 0x20000052
        is_default_entry: false
        action_parameters_values: []
      - priority: 9
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x9"
          mask: "0xFF"
        action_handle: 0x20000053
        is_default_entry: false
        action_parameters_values: []
      - priority: 10
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0xA"
          mask: "0xFF"
        action_handle: 0x20000054
        is_default_entry: false
        action_parameters_values: []
      - priority: 11
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0xB"
          mask: "0xFF"
        action_handle: 0x20000055
        is_default_entry: false
        action_parameters_values: []
      - priority: 12
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0xC"
          mask: "0xFF"
        action_handle: 0x20000056
        is_default_entry: false
        action_parameters_values: []
      - priority: 13
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0xD"
          mask: "0xFF"
        action_handle: 0x20000057
        is_default_entry: false
        action_parameters_values: []
      - priority: 14
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0xE"
          mask: "0xFF"
        action_handle: 0x20000058
        is_default_entry: false
        action_parameters_values: []
      - priority: 15
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0xF"
          mask: "0xFF"
        action_handle: 0x20000059
        is_default_entry: false
        action_parameters_values: []
      - priority: 16
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x10"
          mask: "0xFF"
        action_handle: 0x2000005a
        is_default_entry: false
        action_parameters_values: []
      - priority: 17
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x11"
          mask: "0xFF"
        action_handle: 0x2000005b
        is_default_entry: false
        action_parameters_values: []
      - priority: 18
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x12"
          mask: "0xFF"
        action_handle: 0x2000005c
        is_default_entry: false
        action_parameters_values: []
      - priority: 19
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x13"
          mask: "0xFF"
        action_handle: 0x2000005d
        is_default_entry: false
        action_parameters_values: []
      - priority: 20
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x14"
          mask: "0xFF"
        action_handle: 0x2000005e
        is_default_entry: false
        action_parameters_values: []
      - priority: 21
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x15"
          mask: "0xFF"
        action_handle: 0x2000005f
        is_default_entry: false
        action_parameters_values: []
      - priority: 22
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x16"
          mask: "0xFF"
        action_handle: 0x20000060
        is_default_entry: false
        action_parameters_values: []
      - priority: 23
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x17"
          mask: "0xFF"
        action_handle: 0x20000061
        is_default_entry: false
        action_parameters_values: []
      - priority: 24
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x18"
          mask: "0xFF"
        action_handle: 0x20000062
        is_default_entry: false
        action_parameters_values: []
      - priority: 25
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x19"
          mask: "0xFF"
        action_handle: 0x20000063
        is_default_entry: false
        action_parameters_values: []
      - priority: 26
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1A"
          mask: "0xFF"
        action_handle: 0x20000064
        is_default_entry: false
        action_parameters_values: []
      - priority: 27
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1B"
          mask: "0xFF"
        action_handle: 0x20000065
        is_default_entry: false
        action_parameters_values: []
      - priority: 28
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1C"
          mask: "0xFF"
        action_handle: 0x20000066
        is_default_entry: false
        action_parameters_values: []
      - priority: 29
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1D"
          mask: "0xFF"
        action_handle: 0x20000067
        is_default_entry: false
        action_parameters_values: []
      - priority: 30
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1E"
          mask: "0xFF"
        action_handle: 0x20000068
        is_default_entry: false
        action_parameters_values: []
      - priority: 31
        match_key_fields_values:
        - field_name: log_relative_round_m_dt_x_rate_tail
          value: "0x1F"
          mask: "0xFF"
        action_handle: 0x20000069
        is_default_entry: false
        action_parameters_values: []

    indirect: t_igr_tiExp_relative_round_m_dt_x_rate_tail$tind
  ternary_indirect t_igr_tiExp_relative_round_m_dt_x_rate_tail$tind:
    row: 2
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: t_igr_log_relative_round_m_dt_x_rate_tail }
    format: { action: 0..5, immediate: 6..37 }
    action_bus: { 96..99 : immediate(0..31) }
    instruction: t_igr_tiExp_relative_round_m_dt_x_rate_tail$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_0(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000004a
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 1
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_1(2, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000004b
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 2
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_2(4, 4):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000004c
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 4
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_3(6, 6):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000004d
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 8
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_4(8, 8):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000004e
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 16
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_5(10, 10):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000004f
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 32
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_6(12, 12):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000050
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 64
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_7(14, 14):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000051
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 128
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_8(16, 16):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000052
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 256
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_9(18, 18):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000053
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 512
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_10(20, 20):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000054
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 1024
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_11(22, 22):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000055
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 2048
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_12(24, 24):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000056
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 4096
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_13(26, 26):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000057
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 8192
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_14(28, 28):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000058
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 16384
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_15(30, 30):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000059
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 32768
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_16(32, 32):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000005a
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 65536
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_17(34, 34):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000005b
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 131072
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_18(36, 36):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000005c
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 262144
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_19(38, 38):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000005d
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 524288
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_20(40, 40):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000005e
      - next_table: 0
      - {  }
      - set t_igr_relative_round_m_dt_x_rate_tail, 1048576
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_21(42, 42):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000005f
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 2097152 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_22(44, 44):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000060
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 4194304 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_23(46, 46):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000061
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 8388608 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_24(48, 48):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000062
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 16777216 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_25(50, 50):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000063
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 33554432 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_26(52, 52):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000064
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 67108864 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_27(54, 54):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000065
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 134217728 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_28(56, 56):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000066
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 268435456 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_29(58, 58):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000067
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 536870912 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_30(60, 60):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000068
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 1073741824 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      Ingress.t_igr.aiExp_relative_round_m_dt_x_rate_tail_31(62, 62):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000069
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 2147483648 }
      - set t_igr_relative_round_m_dt_x_rate_tail, $constant0
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x2000006a
      - next_table: 0
      - {  }
    default_only_action: NoAction
stage 6 ingress:
  dependency: match
  ternary_match tbl_t_igr_aiCalc_aggregate_size_else 0:
    p4: { name: tbl_t_igr_aiCalc_aggregate_size_else, hidden: true }
    hit: [  tbl_t_igr_aiCountBytes ]
    miss:  tbl_t_igr_aiCountBytes
    indirect: tbl_t_igr_aiCalc_aggregate_size_else$tind
  ternary_indirect tbl_t_igr_aiCalc_aggregate_size_else$tind:
    row: 0
    bus: 1
    format: { action: 0..0 }
    instruction: tbl_t_igr_aiCalc_aggregate_size_else$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_aggregate_size_else(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000006b
      - next_table: 0
      - add W5, W1, W3
    default_action: Ingress.t_igr.aiCalc_aggregate_size_else
stage 7 ingress:
  dependency: concurrent
  ternary_match t_igr_tiExp_aggregate_size 0:
    p4: { name: Ingress.t_igr.tiExp_aggregate_size, size: 512 }
    p4_param_order: 
      t_igr_log_aggregate_size: { type: ternary, size: 8, full_size: 8, key_name: "log_aggregate_size" }
    row: 6
    bus: 0
    column: 0
    input_xbar:
      ternary group 0: { 0: t_igr_log_aggregate_size }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x1 }
    hit: [  tbl_t_igr_aiCountBytes ]
    miss:  tbl_t_igr_aiCountBytes
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x0"
          mask: "0xFF"
        action_handle: 0x20000024
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1"
          mask: "0xFF"
        action_handle: 0x20000025
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x2"
          mask: "0xFF"
        action_handle: 0x20000026
        is_default_entry: false
        action_parameters_values: []
      - priority: 3
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x3"
          mask: "0xFF"
        action_handle: 0x20000027
        is_default_entry: false
        action_parameters_values: []
      - priority: 4
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x4"
          mask: "0xFF"
        action_handle: 0x20000028
        is_default_entry: false
        action_parameters_values: []
      - priority: 5
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x5"
          mask: "0xFF"
        action_handle: 0x20000029
        is_default_entry: false
        action_parameters_values: []
      - priority: 6
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x6"
          mask: "0xFF"
        action_handle: 0x2000002a
        is_default_entry: false
        action_parameters_values: []
      - priority: 7
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x7"
          mask: "0xFF"
        action_handle: 0x2000002b
        is_default_entry: false
        action_parameters_values: []
      - priority: 8
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x8"
          mask: "0xFF"
        action_handle: 0x2000002c
        is_default_entry: false
        action_parameters_values: []
      - priority: 9
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x9"
          mask: "0xFF"
        action_handle: 0x2000002d
        is_default_entry: false
        action_parameters_values: []
      - priority: 10
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0xA"
          mask: "0xFF"
        action_handle: 0x2000002e
        is_default_entry: false
        action_parameters_values: []
      - priority: 11
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0xB"
          mask: "0xFF"
        action_handle: 0x2000002f
        is_default_entry: false
        action_parameters_values: []
      - priority: 12
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0xC"
          mask: "0xFF"
        action_handle: 0x20000030
        is_default_entry: false
        action_parameters_values: []
      - priority: 13
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0xD"
          mask: "0xFF"
        action_handle: 0x20000031
        is_default_entry: false
        action_parameters_values: []
      - priority: 14
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0xE"
          mask: "0xFF"
        action_handle: 0x20000032
        is_default_entry: false
        action_parameters_values: []
      - priority: 15
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0xF"
          mask: "0xFF"
        action_handle: 0x20000033
        is_default_entry: false
        action_parameters_values: []
      - priority: 16
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x10"
          mask: "0xFF"
        action_handle: 0x20000034
        is_default_entry: false
        action_parameters_values: []
      - priority: 17
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x11"
          mask: "0xFF"
        action_handle: 0x20000035
        is_default_entry: false
        action_parameters_values: []
      - priority: 18
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x12"
          mask: "0xFF"
        action_handle: 0x20000036
        is_default_entry: false
        action_parameters_values: []
      - priority: 19
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x13"
          mask: "0xFF"
        action_handle: 0x20000037
        is_default_entry: false
        action_parameters_values: []
      - priority: 20
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x14"
          mask: "0xFF"
        action_handle: 0x20000038
        is_default_entry: false
        action_parameters_values: []
      - priority: 21
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x15"
          mask: "0xFF"
        action_handle: 0x20000039
        is_default_entry: false
        action_parameters_values: []
      - priority: 22
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x16"
          mask: "0xFF"
        action_handle: 0x2000003a
        is_default_entry: false
        action_parameters_values: []
      - priority: 23
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x17"
          mask: "0xFF"
        action_handle: 0x2000003b
        is_default_entry: false
        action_parameters_values: []
      - priority: 24
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x18"
          mask: "0xFF"
        action_handle: 0x2000003c
        is_default_entry: false
        action_parameters_values: []
      - priority: 25
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x19"
          mask: "0xFF"
        action_handle: 0x2000003d
        is_default_entry: false
        action_parameters_values: []
      - priority: 26
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1A"
          mask: "0xFF"
        action_handle: 0x2000003e
        is_default_entry: false
        action_parameters_values: []
      - priority: 27
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1B"
          mask: "0xFF"
        action_handle: 0x2000003f
        is_default_entry: false
        action_parameters_values: []
      - priority: 28
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1C"
          mask: "0xFF"
        action_handle: 0x20000040
        is_default_entry: false
        action_parameters_values: []
      - priority: 29
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1D"
          mask: "0xFF"
        action_handle: 0x20000041
        is_default_entry: false
        action_parameters_values: []
      - priority: 30
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1E"
          mask: "0xFF"
        action_handle: 0x20000042
        is_default_entry: false
        action_parameters_values: []
      - priority: 31
        match_key_fields_values:
        - field_name: log_aggregate_size
          value: "0x1F"
          mask: "0xFF"
        action_handle: 0x20000043
        is_default_entry: false
        action_parameters_values: []

    indirect: t_igr_tiExp_aggregate_size$tind
  ternary_indirect t_igr_tiExp_aggregate_size$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: t_igr_log_aggregate_size }
    format: { action: 0..5, immediate: 6..37 }
    action_bus: { 96..99 : immediate(0..31) }
    instruction: t_igr_tiExp_aggregate_size$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiExp_aggregate_size_0(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000024
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 1
      Ingress.t_igr.aiExp_aggregate_size_1(2, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000025
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 2
      Ingress.t_igr.aiExp_aggregate_size_2(4, 4):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000026
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 4
      Ingress.t_igr.aiExp_aggregate_size_3(6, 6):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000027
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 8
      Ingress.t_igr.aiExp_aggregate_size_4(8, 8):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000028
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 16
      Ingress.t_igr.aiExp_aggregate_size_5(10, 10):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000029
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 32
      Ingress.t_igr.aiExp_aggregate_size_6(12, 12):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000002a
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 64
      Ingress.t_igr.aiExp_aggregate_size_7(14, 14):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000002b
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 128
      Ingress.t_igr.aiExp_aggregate_size_8(16, 16):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000002c
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 256
      Ingress.t_igr.aiExp_aggregate_size_9(18, 18):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000002d
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 512
      Ingress.t_igr.aiExp_aggregate_size_10(20, 20):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000002e
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 1024
      Ingress.t_igr.aiExp_aggregate_size_11(22, 22):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000002f
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 2048
      Ingress.t_igr.aiExp_aggregate_size_12(24, 24):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000030
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 4096
      Ingress.t_igr.aiExp_aggregate_size_13(26, 26):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000031
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 8192
      Ingress.t_igr.aiExp_aggregate_size_14(28, 28):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000032
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 16384
      Ingress.t_igr.aiExp_aggregate_size_15(30, 30):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000033
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 32768
      Ingress.t_igr.aiExp_aggregate_size_16(32, 32):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000034
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 65536
      Ingress.t_igr.aiExp_aggregate_size_17(34, 34):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000035
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 131072
      Ingress.t_igr.aiExp_aggregate_size_18(36, 36):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000036
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 262144
      Ingress.t_igr.aiExp_aggregate_size_19(38, 38):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000037
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 524288
      Ingress.t_igr.aiExp_aggregate_size_20(40, 40):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000038
      - next_table: 0
      - {  }
      - set t_igr_aggregate_size, 1048576
      Ingress.t_igr.aiExp_aggregate_size_21(42, 42):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000039
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 2097152 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_22(44, 44):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000003a
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 4194304 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_23(46, 46):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000003b
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 8388608 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_24(48, 48):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000003c
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 16777216 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_25(50, 50):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000003d
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 33554432 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_26(52, 52):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000003e
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 67108864 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_27(54, 54):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000003f
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 134217728 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_28(56, 56):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000040
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 268435456 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_29(58, 58):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000041
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 536870912 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_30(60, 60):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000042
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 1073741824 }
      - set t_igr_aggregate_size, $constant0
      Ingress.t_igr.aiExp_aggregate_size_31(62, 62):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000043
      - next_table: 0
      - { $constant0: immediate(0..31), $constant0: 2147483648 }
      - set t_igr_aggregate_size, $constant0
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000044
      - next_table: 0
      - {  }
    default_only_action: NoAction
stage 8 ingress:
  dependency: match
  hash_action tbl_t_igr_ai_rotate_bytes 1:
    p4: { name: tbl_t_igr_ai_rotate_bytes, hidden: true }
    row: 0
    result_bus: 1
    hash_dist:
      0: { hash: 0, mask: 0xffff, shift: 6 }
    input_xbar:
      exact group 0: { 0: t_igr_f }
      hash 0:
        0..15: t_igr_f
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: tbl_t_igr_ai_rotate_bytes-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  END
      miss:  END
      condition: 
        expression: "true(always hit)"
        true:  END
        false:  END
    next: []
    stateful: tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes(hash_dist 0, $DEFAULT, $DEFAULT)
    instruction: tbl_t_igr_ai_rotate_bytes($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.ai_rotate_bytes(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000000a
      - next_table: 0
      - tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes(t_igr_si_rotate_bytes, $hash_dist)
    default_action: Ingress.t_igr.ai_rotate_bytes
  hash_action tbl_t_igr_aiCountBytes 0:
    p4: { name: tbl_t_igr_aiCountBytes, hidden: true }
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 0, mask: 0xffff, shift: 6 }
    input_xbar:
      exact group 0: { 0: t_igr_f }
      hash 0:
        0..15: t_igr_f
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: cond-7
      input_xbar:
        exact group 1: { 2: t_igr_saturated, 24: t_igr_useCebinae }
      row: 0
      bus: 0
      unit: 0
      payload_row: 0
      payload_unit: 0
      payload: 0x3801
      format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11, meter_type: 12..14 }
      match: { 10: t_igr_saturated, 0: t_igr_useCebinae }
      0b1**00000001:
        next:  tbl_t_igr_aiCalc_past_head
      miss:
        run_table : true
      condition: 
        expression: "(t_igr_saturated == 1 && t_igr_useCebinae == 1)"
        true:  tbl_t_igr_aiCalc_past_head
        false:  END
    next:  END
    action_bus: { 96..99 : tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes(0..31) }
    stateful: tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes(hash_dist 0, meter_pfe, meter_type)
    instruction: tbl_t_igr_aiCountBytes(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCountBytes(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000006c
      - next_table: 0
      - set W0(0..31), tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes
      - tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes(t_igr_si_update_bytes, $hash_dist)
    default_action: Ingress.t_igr.aiCountBytes
  stateful tbl_t_igr_aiCountBytes$salu.Ingress.t_igr.ri_bytes:
    p4: { name: Ingress.t_igr.ri_bytes, size: 64 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: t_igr_aggregate_size, 96: t_igr_pkt_len.0-15, 112: t_igr_pkt_len.16-31 }
    data_bytemask: 255
    format: { lo: 32, hi:32 }
    actions:
      t_igr_si_rotate_bytes:
      - ssubu lo, lo, phv_lo
      - output alu_lo
      t_igr_si_update_bytes:
      - lss.u lo, phv_lo, -lo
      - add cmplo, lo, lo, phv_hi
      - add !cmplo, lo, phv_lo, 512
      - output alu_lo
stage 9 ingress:
  dependency: match
  ternary_match tbl_t_igr_aiCalc_past_head 0:
    p4: { name: tbl_t_igr_aiCalc_past_head, hidden: true }
    hit: [  tbl_t_igr_aiDebugWriteBytes ]
    miss:  tbl_t_igr_aiDebugWriteBytes
    indirect: tbl_t_igr_aiCalc_past_head$tind
  ternary_indirect tbl_t_igr_aiCalc_past_head$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_t_igr_aiCalc_past_head$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_past_head(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000006e
      - next_table: 0
      - ssubu W4, W0, W1
    default_action: Ingress.t_igr.aiCalc_past_head
  hash_action tbl_t_igr_aiDebugWriteBytes 1:
    p4: { name: tbl_t_igr_aiDebugWriteBytes, hidden: true }
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 0, mask: 0xffff, shift: 5 }
    input_xbar:
      exact group 0: { 0: t_igr_f }
      hash 0:
        0..15: t_igr_f
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: tbl_t_igr_aiDebugWriteBytes-gateway
      row: 0
      bus: 0
      unit: 0
      0x0:  tbl_t_igr_aiCalc_past_tail
      miss:  tbl_t_igr_aiCalc_past_tail
      condition: 
        expression: "true(always hit)"
        true:  tbl_t_igr_aiCalc_past_tail
        false:  tbl_t_igr_aiCalc_past_tail
    next: []
    stateful: tbl_t_igr_aiDebugWriteBytes$salu.Ingress.t_igr.riBytes(hash_dist 0, $DEFAULT, $DEFAULT)
    instruction: tbl_t_igr_aiDebugWriteBytes($DEFAULT, $DEFAULT)
    actions:
      Ingress.t_igr.aiDebugWriteBytes(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000006d
      - next_table: 0
      - tbl_t_igr_aiDebugWriteBytes$salu.Ingress.t_igr.riBytes(t_igr_siDebugWriteBytes, $hash_dist)
    default_action: Ingress.t_igr.aiDebugWriteBytes
  stateful tbl_t_igr_aiDebugWriteBytes$salu.Ingress.t_igr.riBytes:
    p4: { name: Ingress.t_igr.riBytes, size: 1024 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: t_igr_bytes }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_igr_siDebugWriteBytes:
      - alu_a lo, phv_lo
stage 10 ingress:
  dependency: action
  ternary_match tbl_t_igr_aiCalc_past_tail 0:
    p4: { name: tbl_t_igr_aiCalc_past_tail, hidden: true }
    hit: [  t_igr_tiSetQueue ]
    miss:  t_igr_tiSetQueue
    indirect: tbl_t_igr_aiCalc_past_tail$tind
  ternary_indirect tbl_t_igr_aiCalc_past_tail$tind:
    row: 0
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_t_igr_aiCalc_past_tail$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiCalc_past_tail(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000006f
      - next_table: 0
      - ssubu W3, W4, W2
    default_action: Ingress.t_igr.aiCalc_past_tail
stage 11 ingress:
  dependency: match
  ternary_match t_igr_tiSetQueue 0:
    p4: { name: Ingress.t_igr.tiSetQueue, size: 512 }
    p4_param_order: 
      t_igr_past_head: { type: ternary, size: 32, full_size: 32, key_name: "past_head" }
      t_igr_past_tail: { type: ternary, size: 32, full_size: 32, key_name: "past_tail" }
    row: [ 0, 1 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 0: { 0: t_igr_past_tail, 32: t_igr_past_head(0..7) }
      ternary group 1: { 0: t_igr_past_head(16..31), 24: t_igr_past_head(8..15) }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x155 }
    - { group: 1, dirtcam: 0x45 }
    hit: [  END ]
    miss:  END
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: past_head
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: past_tail
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000070
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: past_head
          value: "0x0"
          mask: "0x0"
        - field_name: past_tail
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x20000071
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: past_head
          value: "0x0"
          mask: "0x0"
        - field_name: past_tail
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000072
        is_default_entry: false
        action_parameters_values: []

    indirect: t_igr_tiSetQueue$tind
  stateful t_igr_tiSetQueue$salu.Ingress.t_igr.queueCounter:
    p4: { name: Ingress.t_igr.queueCounter, size: 1024 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    format: { lo: 32 }
    actions:
      t_igr_countQueueOps:
      - add lo, lo, 1
  ternary_indirect t_igr_tiSetQueue$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: t_igr_past_tail, 32: t_igr_past_head(0..7) }
      ternary group 1: { 0: t_igr_past_head(16..31), 24: t_igr_past_head(8..15) }
    format: { action: 0..1, meter_addr: 2..11 }
    stateful: t_igr_tiSetQueue$salu.Ingress.t_igr.queueCounter(meter_addr, $DEFAULT, $DEFAULT)
    instruction: t_igr_tiSetQueue$tind(action, $DEFAULT)
    actions:
      Ingress.t_igr.aiSetQueueHead(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000070
      - next_table: 0
      - set ig_intr_md_for_tm.qid, t_igr_headq(0..4)
      - t_igr_tiSetQueue$salu.Ingress.t_igr.queueCounter(t_igr_countQueueOps, 0)
      Ingress.t_igr.aiSetQueueTail(1, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000071
      - next_table: 0
      - set ig_intr_md_for_tm.qid, t_igr_tailq(0..4)
      - t_igr_tiSetQueue$salu.Ingress.t_igr.queueCounter(t_igr_countQueueOps, 1)
      Ingress.t_igr.aiDrop(2, 4):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000072
      - next_table: 0
      - set ig_intr_md_for_dprsr.drop_ctl, 1
      - t_igr_tiSetQueue$salu.Ingress.t_igr.queueCounter(t_igr_countQueueOps, 2)
      NoAction(-1, 0):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000073
      - next_table: 0
    default_only_action: NoAction
stage 0 egress:
  ternary_match tbl_main197_0 2:
    p4: { name: tbl_main197_0, hidden: true }
    hit: [  tbl_main198 ]
    miss:  tbl_main198
    indirect: tbl_main197_0$tind
  ternary_indirect tbl_main197_0$tind:
    row: 1
    bus: 0
    format: { action: 0..0 }
    instruction: tbl_main197_0$tind(action, $DEFAULT)
    actions:
      main197_0(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000074
      - next_table: 0
      - set port_0.0-8, eg_intr_md.egress_port
    default_action: main197_0
  ternary_match tbl_main198 3:
    p4: { name: tbl_main198, hidden: true }
    hit: [  t_egr_dpt_2_merged_tbl ]
    miss:  t_egr_dpt_2_merged_tbl
    indirect: tbl_main198$tind
  ternary_indirect tbl_main198$tind:
    row: 0
    bus: 1
    format: { action: 0..0 }
    instruction: tbl_main198$tind(action, $DEFAULT)
    actions:
      main198(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000075
      - next_table: 0
      - set len_0.0-15, hdr.ip.total_len
    default_action: main198
stage 1 egress:
  dependency: match
  hash_action t_egr_dpt_2_merged_tbl 4:
    p4: { name: Egress.t_egr.dpt_2_merged_tbl, size: 512 }
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 2, mask: 0xff03, shift: 0 }
    input_xbar:
      exact group 2: { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }
      hash 4:
        0..1: slice(stripe(crc(0x235, 0x0, 0x0, 64, { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }, { })), 8..9)
      hash group 2:
        table: [4]
        seed: 0x0
      exact group 2: { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }
      hash 4:
        8..15: slice(stripe(crc(0x235, 0x0, 0x0, 64, { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }, { })), 0..7)
      hash group 2:
        table: [4]
        seed: 0x0
    gateway:
      name: cond-8
      input_xbar:
        exact group 1: { 64: port_0.9-31, 88: port_0.0-8(8), 96: port_0.0-8(0..7) }
        hash 3:
          40: port_0.0-8(8)
        hash group 0:
          table: [3]
          seed: 0x0
      row: 0
      bus: 0
      unit: 0
      payload_row: 0
      payload_unit: 0
      payload: 0x1
      format: { action: 0..0 }
      match: { 32: port_0.0-8(8), 0: port_0.0-8(0..7), 8: port_0.9-31(0..7), 16: port_0.9-31(8..15), 24: port_0.9-31(16..22) }
      0b0*0000000000000000000000010000000:
        next:  t_egr_dpt_1_merged_tbl
      miss:
        run_table : true
      condition: 
        expression: "(port_0 == 128)"
        true:  t_egr_dpt_1_merged_tbl
        false:  END
    next:  END
    action_bus: { 16 : hash_dist(0, 0..7, lo), 17 : hash_dist(0, 8..15, lo) }
    instruction: t_egr_dpt_2_merged_tbl(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1562_merged_acn_2_acn_0_opstmt(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000077
      - next_table: 0
      - set B17(2..3), hash_dist(0, 0..1)
      - set B18(0..7), hash_dist(0, 8..15)
    default_action: Egress.t_egr.dpt_1562_merged_acn_2_acn_0_opstmt
stage 2 egress:
  dependency: match
  hash_action t_egr_dpt_1_merged_tbl 4:
    p4: { name: Egress.t_egr.dpt_1_merged_tbl, size: 512 }
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 2, mask: 0x3ff, shift: 0 }
      1: { hash: 2, mask: 0x7fffff, shift: 5, expand: 7 }
    input_xbar:
      exact group 1: { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }
      hash 2:
        0..9: slice(stripe(crc(0x232, 0x0, 0x0, 64, { 0: hdr.ip.dst_addr, 32: hdr.ip.src_addr }, { })), 0..9)
      hash group 2:
        table: [2]
        seed: 0x0
      exact group 2: { 0: port_0.9-31, 24: port_0.0-8(8), 32: port_0.0-8(0..7) }
      hash 4:
        16..23: port_0.0-8(0..7)
        24: port_0.0-8(8)
        25..31: port_0.9-31(0..6)
        39..45: port_0.9-31(7..13)
      hash group 2:
        table: [4]
        seed: 0x0
    gateway:
      name: t_egr_dpt_1_merged_tbl-gateway
      row: 0
      bus: 0
      unit: 0
      0x0:  t_egr_dpt_4_merged_tbl
      miss:  t_egr_dpt_4_merged_tbl
      condition: 
        expression: "true(always hit)"
        true:  t_egr_dpt_4_merged_tbl
        false:  t_egr_dpt_4_merged_tbl
    next: []
    action_bus: { 116..119 : hash_dist(0) }
    stateful: t_egr_dpt_1_merged_tbl$salu.Egress.t_egr.port_cts(hash_dist 1, $DEFAULT, $DEFAULT)
    instruction: t_egr_dpt_1_merged_tbl($DEFAULT, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000076
      - next_table: 0
      - set W20(0..9), hash_dist(0, 0..9)
      - t_egr_dpt_1_merged_tbl$salu.Egress.t_egr.port_cts(t_egr_dpt_1559_sprog_1763_salu_0_opstmt, $hash_dist)
    default_action: Egress.t_egr.dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt
  stateful t_egr_dpt_1_merged_tbl$salu.Egress.t_egr.port_cts:
    p4: { name: Egress.t_egr.port_cts, size: 32 }
    row: 15
    logical_bus: S
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    home_row: 15
    input_xbar:
      exact group 1: { 64: len_0.0-15, 80: len_0.16-31 }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1559_sprog_1763_salu_0_opstmt:
      - add lo, lo, phv_lo
stage 3 egress:
  dependency: match
  hash_action t_egr_dpt_4_merged_tbl 4:
    p4: { name: Egress.t_egr.dpt_4_merged_tbl, size: 512 }
    row: 0
    result_bus: 0
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      exact group 0: { 32: t_egr_h1 }
      hash 0:
        0..9: t_egr_h1
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: t_egr_dpt_4_merged_tbl-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  t_egr_dpt_3_merged_tbl
      miss:  t_egr_dpt_3_merged_tbl
      condition: 
        expression: "true(always hit)"
        true:  t_egr_dpt_3_merged_tbl
        false:  t_egr_dpt_3_merged_tbl
    next: []
    action_bus: { 96..99 : t_egr_dpt_4_merged_tbl$salu.Egress.t_egr.flow_src1(0..31) }
    stateful: t_egr_dpt_4_merged_tbl$salu.Egress.t_egr.flow_src1(hash_dist 0, $DEFAULT, $DEFAULT)
    instruction: t_egr_dpt_4_merged_tbl($DEFAULT, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1564_merged_acn_4_acn_0_opstmt(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000079
      - next_table: 0
      - set W22(0..31), t_egr_dpt_4_merged_tbl$salu.Egress.t_egr.flow_src1
      - t_egr_dpt_4_merged_tbl$salu.Egress.t_egr.flow_src1(t_egr_dpt_1564_sprog_1769_salu_0_opstmt, $hash_dist)
    default_action: Egress.t_egr.dpt_1564_merged_acn_4_acn_0_opstmt
  stateful t_egr_dpt_4_merged_tbl$salu.Egress.t_egr.flow_src1:
    p4: { name: Egress.t_egr.flow_src1, size: 1024 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: hdr.ip.src_addr }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1564_sprog_1769_salu_0_opstmt:
      - equ lo, lo
      - alu_a cmplo, lo, phv_lo
      - alu_a !cmplo, lo, lo
      - output mem_lo
  hash_action t_egr_dpt_3_merged_tbl 5:
    p4: { name: Egress.t_egr.dpt_3_merged_tbl, size: 512 }
    row: 0
    result_bus: 1
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      exact group 0: { 32: t_egr_h1 }
      hash 0:
        0..9: t_egr_h1
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: t_egr_dpt_3_merged_tbl-gateway
      row: 1
      bus: 0
      unit: 0
      0x0:  t_egr_dpt_5_merged_tbl
      miss:  t_egr_dpt_5_merged_tbl
      condition: 
        expression: "true(always hit)"
        true:  t_egr_dpt_5_merged_tbl
        false:  t_egr_dpt_5_merged_tbl
    next: []
    action_bus: { 104..107 : t_egr_dpt_3_merged_tbl$salu.Egress.t_egr.flow_dst1(0..31) }
    stateful: t_egr_dpt_3_merged_tbl$salu.Egress.t_egr.flow_dst1(hash_dist 0, $DEFAULT, $DEFAULT)
    instruction: t_egr_dpt_3_merged_tbl($DEFAULT, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1566_merged_acn_3_acn_0_opstmt(0, 2):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x20000078
      - next_table: 0
      - set W17(0..31), t_egr_dpt_3_merged_tbl$salu.Egress.t_egr.flow_dst1
      - t_egr_dpt_3_merged_tbl$salu.Egress.t_egr.flow_dst1(t_egr_dpt_1566_sprog_1768_salu_0_opstmt, $hash_dist)
    default_action: Egress.t_egr.dpt_1566_merged_acn_3_acn_0_opstmt
  stateful t_egr_dpt_3_merged_tbl$salu.Egress.t_egr.flow_dst1:
    p4: { name: Egress.t_egr.flow_dst1, size: 1024 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 1: { 64: hdr.ip.dst_addr }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1566_sprog_1768_salu_0_opstmt:
      - equ lo, lo
      - alu_a cmplo, lo, phv_lo
      - alu_a !cmplo, lo, lo
      - output mem_lo
stage 4 egress:
  dependency: action
  ternary_match t_egr_dpt_5_merged_tbl 2:
    p4: { name: Egress.t_egr.dpt_5_merged_tbl, size: 512 }
    hit: [  t_egr_dpt_7_merged_tbl ]
    miss:  t_egr_dpt_7_merged_tbl
    indirect: t_egr_dpt_5_merged_tbl$tind
  ternary_indirect t_egr_dpt_5_merged_tbl$tind:
    row: 1
    bus: 0
    format: { action: 0..0 }
    instruction: t_egr_dpt_5_merged_tbl$tind(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt(0, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true, is_constant: true }
      - handle: 0x2000007a
      - next_table: 0
      - sub W19, W17, W16
      - sub W24, W22, W21
    default_action: Egress.t_egr.dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt
stage 5 egress:
  dependency: match
  ternary_match t_egr_dpt_7_merged_tbl 1:
    p4: { name: Egress.t_egr.dpt_7_merged_tbl, size: 512 }
    p4_param_order: 
      t_egr_if_precomp1550: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1550" }
      t_egr_if_precomp: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp" }
      t_egr_stored_dst: { type: ternary, size: 32, full_size: 32, key_name: "stored_dst" }
      t_egr_stored_src: { type: ternary, size: 32, full_size: 32, key_name: "stored_src" }
    row: [ 5, 4, 3 ]
    bus: [ 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst(0..7), 24: t_egr_if_precomp1550(8..23) }
      ternary group 2: { 0: t_egr_if_precomp1550(24..31), 8: t_egr_if_precomp1550(0..7), 16: t_egr_stored_src(8..31) }
      ternary group 5: { 0: t_egr_stored_src(0..7), 8: t_egr_if_precomp(8..31), 32: t_egr_if_precomp(0..7) }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      exact group 0: { 2: t_egr_h2.8-9, 8: t_egr_h2.0-7 }
      hash 0:
        0..7: t_egr_h2.0-7
        8..9: t_egr_h2.8-9
      hash group 0:
        table: [0]
        seed: 0x0
    match:
    - { group: 1, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 2, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, byte_config: 3, dirtcam: 0x155 }
    hit: [  t_egr_dpt_6_merged_tbl ]
    miss:  t_egr_dpt_6_merged_tbl
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x2000007e
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x2000007e
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x2000007f
        is_default_entry: false
        action_parameters_values: []

    indirect: t_egr_dpt_7_merged_tbl$tind
  stateful t_egr_dpt_7_merged_tbl$salu.Egress.t_egr.flow_src2:
    p4: { name: Egress.t_egr.flow_src2, size: 1024 }
    row: 11
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 11
    input_xbar:
      exact group 0: { 64: hdr.ip.src_addr }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1577_sprog_1771_salu_0_opstmt:
      - equ lo, lo
      - alu_a cmplo, lo, phv_lo
      - alu_a !cmplo, lo, lo
      - output mem_lo
  ternary_indirect t_egr_dpt_7_merged_tbl$tind:
    row: 1
    bus: 0
    column: 2
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst(0..7), 24: t_egr_if_precomp1550(8..23) }
      ternary group 2: { 0: t_egr_if_precomp1550(24..31), 8: t_egr_if_precomp1550(0..7), 16: t_egr_stored_src(8..31) }
      ternary group 5: { 0: t_egr_stored_src(0..7), 8: t_egr_if_precomp(8..31), 32: t_egr_if_precomp(0..7) }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      exact group 0: { 2: t_egr_h2.8-9, 8: t_egr_h2.0-7 }
      hash 0:
        0..7: t_egr_h2.0-7
        8..9: t_egr_h2.8-9
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11 }
    action_bus: { 104..107 : t_egr_dpt_7_merged_tbl$salu.Egress.t_egr.flow_src2(0..31) }
    stateful: t_egr_dpt_7_merged_tbl$salu.Egress.t_egr.flow_src2(hash_dist 0, meter_pfe, $DEFAULT)
    instruction: t_egr_dpt_7_merged_tbl$tind(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1635_merged_acn_6_noop(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000007e
      - next_table: 0
      Egress.t_egr.dpt_1577_merged_acn_7_acn_0_opstmt(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000007f
      - next_table: 0
      - set W23(0..31), t_egr_dpt_7_merged_tbl$salu.Egress.t_egr.flow_src2
      - t_egr_dpt_7_merged_tbl$salu.Egress.t_egr.flow_src2(t_egr_dpt_1577_sprog_1771_salu_0_opstmt, $hash_dist)
      NoAction(-1, 2):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000080
      - next_table: 0
    default_only_action: NoAction
  ternary_match t_egr_dpt_6_merged_tbl 2:
    p4: { name: Egress.t_egr.dpt_6_merged_tbl, size: 512 }
    p4_param_order: 
      t_egr_if_precomp1550: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1550" }
      t_egr_if_precomp: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp" }
      t_egr_stored_dst: { type: ternary, size: 32, full_size: 32, key_name: "stored_dst" }
      t_egr_stored_src: { type: ternary, size: 32, full_size: 32, key_name: "stored_src" }
    row: [ 0, 1, 2 ]
    bus: [ 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst(0..7), 24: t_egr_if_precomp1550(8..23) }
      ternary group 2: { 0: t_egr_if_precomp1550(24..31), 8: t_egr_if_precomp1550(0..7), 16: t_egr_stored_src(8..31) }
      ternary group 5: { 0: t_egr_stored_src(0..7), 8: t_egr_if_precomp(8..31), 32: t_egr_if_precomp(0..7) }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      exact group 0: { 2: t_egr_h2.8-9, 8: t_egr_h2.0-7 }
      hash 0:
        0..7: t_egr_h2.0-7
        8..9: t_egr_h2.8-9
      hash group 0:
        table: [0]
        seed: 0x0
    match:
    - { group: 1, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 2, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, byte_config: 3, dirtcam: 0x155 }
    hit: [  t_egr_dpt_8_merged_tbl ]
    miss:  t_egr_dpt_8_merged_tbl
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x2000007b
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x2000007b
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x2000007c
        is_default_entry: false
        action_parameters_values: []

    indirect: t_egr_dpt_6_merged_tbl$tind
  stateful t_egr_dpt_6_merged_tbl$salu.Egress.t_egr.flow_dst2:
    p4: { name: Egress.t_egr.flow_dst2, size: 1024 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 1: { 64: hdr.ip.dst_addr }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1581_sprog_1770_salu_0_opstmt:
      - equ lo, lo
      - alu_a cmplo, lo, phv_lo
      - alu_a !cmplo, lo, lo
      - output mem_lo
  ternary_indirect t_egr_dpt_6_merged_tbl$tind:
    row: 0
    bus: 0
    column: 2
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst(0..7), 24: t_egr_if_precomp1550(8..23) }
      ternary group 2: { 0: t_egr_if_precomp1550(24..31), 8: t_egr_if_precomp1550(0..7), 16: t_egr_stored_src(8..31) }
      ternary group 5: { 0: t_egr_stored_src(0..7), 8: t_egr_if_precomp(8..31), 32: t_egr_if_precomp(0..7) }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      exact group 0: { 2: t_egr_h2.8-9, 8: t_egr_h2.0-7 }
      hash 0:
        0..7: t_egr_h2.0-7
        8..9: t_egr_h2.8-9
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11 }
    action_bus: { 112..115 : t_egr_dpt_6_merged_tbl$salu.Egress.t_egr.flow_dst2(0..31) }
    stateful: t_egr_dpt_6_merged_tbl$salu.Egress.t_egr.flow_dst2(hash_dist 0, meter_pfe, $DEFAULT)
    instruction: t_egr_dpt_6_merged_tbl$tind(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1635_merged_acn_6_noop(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000007b
      - next_table: 0
      Egress.t_egr.dpt_1581_merged_acn_6_acn_0_opstmt(1, 3):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x2000007c
      - next_table: 0
      - set W18(0..31), t_egr_dpt_6_merged_tbl$salu.Egress.t_egr.flow_dst2
      - t_egr_dpt_6_merged_tbl$salu.Egress.t_egr.flow_dst2(t_egr_dpt_1581_sprog_1770_salu_0_opstmt, $hash_dist)
      NoAction(-1, 4):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x2000007d
      - next_table: 0
    default_only_action: NoAction
  ternary_match t_egr_dpt_8_merged_tbl 3:
    p4: { name: Egress.t_egr.dpt_8_merged_tbl, size: 512 }
    p4_param_order: 
      t_egr_if_precomp1550: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1550" }
      t_egr_if_precomp: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp" }
      t_egr_stored_dst: { type: ternary, size: 32, full_size: 32, key_name: "stored_dst" }
      t_egr_stored_src: { type: ternary, size: 32, full_size: 32, key_name: "stored_src" }
    row: [ 6, 7, 8 ]
    bus: [ 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    hash_dist:
      1: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst(0..7), 24: t_egr_if_precomp1550(8..23) }
      ternary group 2: { 0: t_egr_if_precomp1550(24..31), 8: t_egr_if_precomp1550(0..7), 16: t_egr_stored_src(8..31) }
      ternary group 5: { 0: t_egr_stored_src(0..7), 8: t_egr_if_precomp(8..31), 32: t_egr_if_precomp(0..7) }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      exact group 0: { 32: t_egr_h1 }
      hash 0:
        16..25: t_egr_h1
      hash group 0:
        table: [0]
        seed: 0x0
    match:
    - { group: 1, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 2, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, byte_config: 3, dirtcam: 0x155 }
    hit: [  t_egr_dpt_9_merged_tbl ]
    miss:  t_egr_dpt_9_merged_tbl
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x20000081
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000081
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000082
        is_default_entry: false
        action_parameters_values: []

    indirect: t_egr_dpt_8_merged_tbl$tind
  stateful t_egr_dpt_8_merged_tbl$salu.Egress.t_egr.flow_ct1:
    p4: { name: Egress.t_egr.flow_ct1, size: 1024 }
    row: 7
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 7
    input_xbar:
      exact group 2: { 64: len_0.0-15, 80: len_0.16-31 }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1576_sprog_1772_salu_0_opstmt:
      - add lo, lo, phv_lo
  ternary_indirect t_egr_dpt_8_merged_tbl$tind:
    row: 3
    bus: 0
    column: 2
    hash_dist:
      1: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst(0..7), 24: t_egr_if_precomp1550(8..23) }
      ternary group 2: { 0: t_egr_if_precomp1550(24..31), 8: t_egr_if_precomp1550(0..7), 16: t_egr_stored_src(8..31) }
      ternary group 5: { 0: t_egr_stored_src(0..7), 8: t_egr_if_precomp(8..31), 32: t_egr_if_precomp(0..7) }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      exact group 0: { 32: t_egr_h1 }
      hash 0:
        16..25: t_egr_h1
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11 }
    stateful: t_egr_dpt_8_merged_tbl$salu.Egress.t_egr.flow_ct1(hash_dist 1, meter_pfe, $DEFAULT)
    instruction: t_egr_dpt_8_merged_tbl$tind(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1576_merged_acn_8_acn_0_opstmt(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000081
      - next_table: 0
      - t_egr_dpt_8_merged_tbl$salu.Egress.t_egr.flow_ct1(t_egr_dpt_1576_sprog_1772_salu_0_opstmt, $hash_dist)
      Egress.t_egr.dpt_1635_merged_acn_6_noop(1, 5):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000082
      - next_table: 0
      NoAction(-1, 6):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000083
      - next_table: 0
    default_only_action: NoAction
stage 6 egress:
  dependency: match
  ternary_match t_egr_dpt_9_merged_tbl 1:
    p4: { name: Egress.t_egr.dpt_9_merged_tbl, size: 512 }
    p4_param_order: 
      t_egr_if_precomp1550: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1550" }
      t_egr_if_precomp: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp" }
      t_egr_stored_dst: { type: ternary, size: 32, full_size: 32, key_name: "stored_dst" }
      t_egr_stored_src: { type: ternary, size: 32, full_size: 32, key_name: "stored_src" }
    row: [ 0, 1, 2 ]
    bus: [ 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 0: { 0: t_egr_stored_dst(0..7), 8: t_egr_if_precomp1550(8..15), 16: t_egr_stored_dst(16..31), 32: t_egr_if_precomp1550(0..7) }
      ternary group 1: { 0: t_egr_if_precomp1550(16..31), 16: t_egr_stored_src(0..23) }
      ternary group 2: { 0: t_egr_stored_src(24..31), 8: t_egr_if_precomp }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
    match:
    - { group: 0, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 1, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 2, byte_config: 3, dirtcam: 0x155 }
    hit: [  t_egr_dpt_10_merged_tbl ]
    miss:  t_egr_dpt_10_merged_tbl
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x20000084
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000084
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000085
        is_default_entry: false
        action_parameters_values: []

    indirect: t_egr_dpt_9_merged_tbl$tind
  ternary_indirect t_egr_dpt_9_merged_tbl$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: t_egr_stored_dst(0..7), 8: t_egr_if_precomp1550(8..15), 16: t_egr_stored_dst(16..31), 32: t_egr_if_precomp1550(0..7) }
      ternary group 1: { 0: t_egr_if_precomp1550(16..31), 16: t_egr_stored_src(0..23) }
      ternary group 2: { 0: t_egr_stored_src(24..31), 8: t_egr_if_precomp }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
    format: { action: 0..0 }
    instruction: t_egr_dpt_9_merged_tbl$tind(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1635_merged_acn_6_noop(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000084
      - next_table: 0
      Egress.t_egr.dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000085
      - next_table: 0
      - sub W20, W18, W16
      - sub W25, W23, W21
      NoAction(-1, 2):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000086
      - next_table: 0
    default_only_action: NoAction
stage 7 egress:
  dependency: match
  ternary_match t_egr_dpt_10_merged_tbl 1:
    p4: { name: Egress.t_egr.dpt_10_merged_tbl, size: 512 }
    p4_param_order: 
      t_egr_if_precomp1548: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1548" }
      t_egr_if_precomp1547: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1547" }
      t_egr_stored_dst2: { type: ternary, size: 32, full_size: 32, key_name: "stored_dst2" }
      t_egr_stored_src2: { type: ternary, size: 32, full_size: 32, key_name: "stored_src2" }
      t_egr_if_precomp1550: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp1550" }
      t_egr_if_precomp: { type: ternary, size: 32, full_size: 32, key_name: "if_precomp" }
      t_egr_stored_dst: { type: ternary, size: 32, full_size: 32, key_name: "stored_dst" }
      t_egr_stored_src: { type: ternary, size: 32, full_size: 32, key_name: "stored_src" }
    row: [ 0, 1, 2, 3, 4, 5 ]
    bus: [ 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst2(0..23) }
      ternary group 2: { 0: t_egr_stored_dst2(24..31), 8: t_egr_if_precomp1550 }
      ternary group 3: { 0: t_egr_if_precomp1548(8..31), 24: t_egr_if_precomp1548(0..7), 32: t_egr_stored_src(8..15) }
      ternary group 4: { 0: t_egr_stored_src(16..31), 16: t_egr_stored_src(0..7), 24: t_egr_stored_src2(8..23) }
      ternary group 5: { 0: t_egr_stored_src2(0..7), 8: t_egr_if_precomp(8..23), 24: t_egr_stored_src2(24..31), 32: t_egr_if_precomp(0..7) }
      ternary group 7: { 0: t_egr_if_precomp(24..31), 8: t_egr_if_precomp1547 }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      byte group 1: { 0: t_egr_stored_dst(0..7) }
      exact group 0: { 2: t_egr_h2.8-9, 8: t_egr_h2.0-7 }
      hash 0:
        0..7: t_egr_h2.0-7
        8..9: t_egr_h2.8-9
      hash group 0:
        table: [0]
        seed: 0x0
    match:
    - { group: 1, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 2, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 3, byte_group: 1, byte_config: 0, dirtcam: 0x555 }
    - { group: 4, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, byte_config: 3, dirtcam: 0x155 }
    - { group: 7, dirtcam: 0x155 }
    hit: [  END ]
    miss:  END
    context_json:
      static_entries:
      - priority: 0
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src2
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x20000087
        is_default_entry: false
        action_parameters_values: []
      - priority: 1
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src2
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000087
        is_default_entry: false
        action_parameters_values: []
      - priority: 2
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src2
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000088
        is_default_entry: false
        action_parameters_values: []
      - priority: 3
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src2
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_src
          value: "0x0"
          mask: "0xFFFFFFFF"
        action_handle: 0x20000087
        is_default_entry: false
        action_parameters_values: []
      - priority: 4
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src2
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000087
        is_default_entry: false
        action_parameters_values: []
      - priority: 5
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0xFFFFFFFF"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src2
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000088
        is_default_entry: false
        action_parameters_values: []
      - priority: 6
        match_key_fields_values:
        - field_name: if_precomp1548
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1547
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst2
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src2
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp1550
          value: "0x0"
          mask: "0x0"
        - field_name: if_precomp
          value: "0x0"
          mask: "0x0"
        - field_name: stored_dst
          value: "0x0"
          mask: "0x0"
        - field_name: stored_src
          value: "0x0"
          mask: "0x0"
        action_handle: 0x20000087
        is_default_entry: false
        action_parameters_values: []

    indirect: t_egr_dpt_10_merged_tbl$tind
  stateful t_egr_dpt_10_merged_tbl$salu.Egress.t_egr.flow_ct2:
    p4: { name: Egress.t_egr.flow_ct2, size: 1024 }
    row: 15
    logical_bus: S
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    home_row: 15
    input_xbar:
      exact group 0: { 64: len_0.0-15, 80: len_0.16-31 }
    data_bytemask: 15
    format: { lo: 32 }
    actions:
      t_egr_dpt_1592_sprog_1773_salu_0_opstmt:
      - add lo, lo, phv_lo
  ternary_indirect t_egr_dpt_10_merged_tbl$tind:
    row: 1
    bus: 0
    column: 2
    hash_dist:
      0: { hash: 0, mask: 0x3ff, shift: 5 }
    input_xbar:
      ternary group 1: { 0: t_egr_stored_dst(16..31), 16: t_egr_stored_dst2(0..23) }
      ternary group 2: { 0: t_egr_stored_dst2(24..31), 8: t_egr_if_precomp1550 }
      ternary group 3: { 0: t_egr_if_precomp1548(8..31), 24: t_egr_if_precomp1548(0..7), 32: t_egr_stored_src(8..15) }
      ternary group 4: { 0: t_egr_stored_src(16..31), 16: t_egr_stored_src(0..7), 24: t_egr_stored_src2(8..23) }
      ternary group 5: { 0: t_egr_stored_src2(0..7), 8: t_egr_if_precomp(8..23), 24: t_egr_stored_src2(24..31), 32: t_egr_if_precomp(0..7) }
      ternary group 7: { 0: t_egr_if_precomp(24..31), 8: t_egr_if_precomp1547 }
      byte group 0: { 0: t_egr_stored_dst(8..15) }
      byte group 1: { 0: t_egr_stored_dst(0..7) }
      exact group 0: { 2: t_egr_h2.8-9, 8: t_egr_h2.0-7 }
      hash 0:
        0..7: t_egr_h2.0-7
        8..9: t_egr_h2.8-9
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11 }
    stateful: t_egr_dpt_10_merged_tbl$salu.Egress.t_egr.flow_ct2(hash_dist 0, meter_pfe, $DEFAULT)
    instruction: t_egr_dpt_10_merged_tbl$tind(action, $DEFAULT)
    actions:
      Egress.t_egr.dpt_1635_merged_acn_6_noop(0, 0):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000087
      - next_table: 0
      Egress.t_egr.dpt_1592_merged_acn_10_acn_0_opstmt(1, 1):
      - hit_allowed: { allowed: true }
      - default_action: { allowed: true }
      - handle: 0x20000088
      - next_table: 0
      - t_egr_dpt_10_merged_tbl$salu.Egress.t_egr.flow_ct2(t_egr_dpt_1592_sprog_1773_salu_0_opstmt, $hash_dist)
      NoAction(-1, 2):
      - hit_allowed: { allowed: false, reason: user_indicated_default_only }
      - default_only_action: { allowed: true }
      - handle: 0x20000089
      - next_table: 0
    default_only_action: NoAction


primitives: "main.prim.json"
dynhash: "main.dynhash.json"
